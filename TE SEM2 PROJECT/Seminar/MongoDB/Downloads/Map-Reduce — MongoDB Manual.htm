<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head>
    <title>Map-Reduce — MongoDB Manual</title>

    <link rel="shortcut icon" href="http://media.mongodb.org/favicon.ico">
    <meta name="robots" content="index">
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <link rel="canonical" href="http://docs.mongodb.org/manual/applications/map-reduce">

    
    
    <link rel="stylesheet" href="Map-Reduce%20%E2%80%94%20MongoDB%20Manual_files/mongodb-docs.css" type="text/css">
    <link rel="stylesheet" href="Map-Reduce%20%E2%80%94%20MongoDB%20Manual_files/pygments.css" type="text/css">
      
    <script id="undefined" src="Map-Reduce%20%E2%80%94%20MongoDB%20Manual_files/inpage_linkid.js" async="" type="text/javascript"></script><script src="Map-Reduce%20%E2%80%94%20MongoDB%20Manual_files/ga.js" async="" type="text/javascript"></script><script src="Map-Reduce%20%E2%80%94%20MongoDB%20Manual_files/cse.js" async="" type="text/javascript"></script><script type="text/javascript">
      var DOCUMENTATION_OPTIONS = {
        URL_ROOT:    '../../',
        VERSION:     '2.2.3',
        COLLAPSE_INDEX: false,
        FILE_SUFFIX: '',
        HAS_SOURCE:  false
      };
    </script>
    <script type="text/javascript" src="Map-Reduce%20%E2%80%94%20MongoDB%20Manual_files/jquery.js"></script>
    <script type="text/javascript" src="Map-Reduce%20%E2%80%94%20MongoDB%20Manual_files/underscore.js"></script>
    <script type="text/javascript" src="Map-Reduce%20%E2%80%94%20MongoDB%20Manual_files/doctools.js"></script>
      <link rel="search" type="application/opensearchdescription+xml" href="http://docs.mongodb.org/osd.xml" title="MongoDB Help">
<link rel="author" title="About these documents" href="http://docs.mongodb.org/manual/about/">
<link rel="top" title="MongoDB Manual" href="http://docs.mongodb.org/manual/">
<link rel="up" title="Aggregation" href="http://docs.mongodb.org/manual/aggregation/">
<link rel="next" title="Simple Aggregation Methods and Commands" href="http://docs.mongodb.org/manual/reference/simple-aggregation/">
<link rel="prev" title="Aggregation Framework Reference" href="http://docs.mongodb.org/manual/reference/aggregation/">
<!-- Put the following javascript before the closing </head> tag. -->
<script>
  (function() {
    var cx = '017213726194841070573:WMX6838984';
    var gcse = document.createElement('script'); gcse.type = 'text/javascript'; gcse.async = true;
    gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(gcse, s);
  })();
</script>
  <script type="text/javascript" src="Map-Reduce%20%E2%80%94%20MongoDB%20Manual_files/jsapi"></script><link rel="stylesheet" href="Map-Reduce%20%E2%80%94%20MongoDB%20Manual_files/defaulten.css" type="text/css"><link rel="stylesheet" href="Map-Reduce%20%E2%80%94%20MongoDB%20Manual_files/default.css" type="text/css"><script src="Map-Reduce%20%E2%80%94%20MongoDB%20Manual_files/defaulten.js" type="text/javascript"></script><script src="Map-Reduce%20%E2%80%94%20MongoDB%20Manual_files/search.js" type="text/javascript"></script><style type="text/css">
.gsc-control-cse {
font-family: Arial, sans-serif;
border-color: #FFFFFF;
background-color: #FFFFFF;
}
.gsc-control-cse .gsc-table-result {
font-family: Arial, sans-serif;
}
input.gsc-input, .gsc-input-box, .gsc-input-box-hover, .gsc-input-box-focus {
border-color: #D9D9D9;
}
input.gsc-search-button, input.gsc-search-button:hover, input.gsc-search-button:focus {
border-color: #5AAC41;
background-color: #5AAC41;
background-image: none;
filter: none;
}
.gsc-tabHeader.gsc-tabhInactive {
border-color: #CCCCCC;
background-color: #FFFFFF;
}
.gsc-tabHeader.gsc-tabhActive {
border-color: #CCCCCC;
border-bottom-color: #FFFFFF;
background-color: #FFFFFF;
}
.gsc-tabsArea {
border-color: #CCCCCC;
}
.gsc-webResult.gsc-result,
.gsc-results .gsc-imageResult {
border-color: #FFFFFF;
background-color: #FFFFFF;
}
.gsc-webResult.gsc-result:hover,
.gsc-imageResult:hover {
border-color: #FFFFFF;
background-color: #FFFFFF;
}
.gs-webResult.gs-result a.gs-title:link,
.gs-webResult.gs-result a.gs-title:link b,
.gs-imageResult a.gs-title:link,
.gs-imageResult a.gs-title:link b {
color: #1155CC;
}
.gs-webResult.gs-result a.gs-title:visited,
.gs-webResult.gs-result a.gs-title:visited b,
.gs-imageResult a.gs-title:visited,
.gs-imageResult a.gs-title:visited b {
color: #1155CC;
}
.gs-webResult.gs-result a.gs-title:hover,
.gs-webResult.gs-result a.gs-title:hover b,
.gs-imageResult a.gs-title:hover,
.gs-imageResult a.gs-title:hover b {
color: #1155CC;
}
.gs-webResult.gs-result a.gs-title:active,
.gs-webResult.gs-result a.gs-title:active b,
.gs-imageResult a.gs-title:active,
.gs-imageResult a.gs-title:active b {
color: #1155CC;
}
.gsc-cursor-page {
color: #1155CC;
}
a.gsc-trailing-more-results:link {
color: #1155CC;
}
.gs-webResult .gs-snippet,
.gs-imageResult .gs-snippet,
.gs-fileFormatType {
color: #333333;
}
.gs-webResult div.gs-visibleUrl,
.gs-imageResult div.gs-visibleUrl {
color: #009933;
}
.gs-webResult div.gs-visibleUrl-short {
color: #009933;
}
.gs-webResult div.gs-visibleUrl-short {
display: none;
}
.gs-webResult div.gs-visibleUrl-long {
display: block;
}
.gs-promotion div.gs-visibleUrl-short {
display: none;
}
.gs-promotion div.gs-visibleUrl-long {
display: block;
}
.gsc-cursor-box {
border-color: #FFFFFF;
}
.gsc-results .gsc-cursor-box .gsc-cursor-page {
border-color: #CCCCCC;
background-color: #FFFFFF;
color: #1155CC;
}
.gsc-results .gsc-cursor-box .gsc-cursor-current-page {
border-color: #CCCCCC;
background-color: #FFFFFF;
color: #1155CC;
}
.gsc-webResult.gsc-result.gsc-promotion {
border-color: #F6F6F6;
background-color: #F6F6F6;
}
.gsc-completion-title {
color: #1155CC;
}
.gsc-completion-snippet {
color: #333333;
}
.gs-promotion a.gs-title:link,
.gs-promotion a.gs-title:link *,
.gs-promotion .gs-snippet a:link {
color: #1155CC;
}
.gs-promotion a.gs-title:visited,
.gs-promotion a.gs-title:visited *,
.gs-promotion .gs-snippet a:visited {
color: #1155CC;
}
.gs-promotion a.gs-title:hover,
.gs-promotion a.gs-title:hover *,
.gs-promotion .gs-snippet a:hover {
color: #1155CC;
}
.gs-promotion a.gs-title:active,
.gs-promotion a.gs-title:active *,
.gs-promotion .gs-snippet a:active {
color: #1155CC;
}
.gs-promotion .gs-snippet,
.gs-promotion .gs-title .gs-promotion-title-right,
.gs-promotion .gs-title .gs-promotion-title-right * {
color: #333333;
}
.gs-promotion .gs-visibleUrl,
.gs-promotion .gs-visibleUrl-short {
color: #009933;
}
.gsc-input input.gsc-input {
background: none repeat scroll 0% 0% white !important;
}
</style><style type="text/css">.gsfe_a{border:1px solid #b9b9b9;border-top-color:#a0a0a0;box-shadow:inset 0px 1px 2px rgba(0,0,0,0.1);-moz-box-shadow:inset 0px 1px 2px rgba(0,0,0,0.1);-webkit-box-shadow:inset 0px 1px 2px rgba(0,0,0,0.1);}.gsfe_b{border:1px solid #4d90fe;outline:none;box-shadow:inset 0px 1px 2px rgba(0,0,0,0.3);-moz-box-shadow:inset 0px 1px 2px rgba(0,0,0,0.3);-webkit-box-shadow:inset 0px 1px 2px rgba(0,0,0,0.3);}.gssb_c{border:0;position:absolute;z-index:989}.gssb_e{border:1px solid #ccc;border-top-color:#d9d9d9;box-shadow:0 2px 4px rgba(0,0,0,0.2);-moz-box-shadow:0 2px 4px rgba(0,0,0,0.2);cursor:default}.gssb_f{visibility:hidden;white-space:nowrap}.gssb_k{border:0;display:block;position:absolute;top:0;z-index:988}.gsdd_a{border:none!important}.gsib_a{width:100%;padding:4px 6px 0}.gsib_a,.gsib_b{vertical-align:top}.gssb_a{padding:0 7px}.gssb_a,.gssb_a td{white-space:nowrap;overflow:hidden;line-height:22px}#gssb_b{font-size:11px;color:#36c;text-decoration:none}#gssb_b:hover{font-size:11px;color:#36c;text-decoration:underline}.gssb_g{text-align:center;padding:8px 0 7px;position:relative}.gssb_h{font-size:15px;height:28px;margin:0.2em}.gssb_i{background:#eee}.gss_ifl{visibility:hidden;padding-left:5px}.gssb_i .gss_ifl{visibility:visible}a.gssb_j{font-size:13px;color:#36c;text-decoration:none;line-height:100%}a.gssb_j:hover{text-decoration:underline}.gssb_l{height:1px;background-color:#e5e5e5}.gssb_m{color:#000;background:#fff}.gscsep_a{display:none}.gsq_a{padding:0}.gscb_a{display:inline-block;font:27px/13px arial,sans-serif}.gsst_a .gscb_a{color:#a1b9ed;cursor:pointer}.gsst_a:hover .gscb_a,.gsst_a:focus .gscb_a{color:#36c}.gsst_a{display:inline-block}.gsst_a{cursor:pointer;padding:0 4px}.gsst_a:hover{text-decoration:none!important}.gsst_b{font-size:16px;padding:0 2px;user-select:none;-moz-user-select:none;white-space:nowrap}.gsst_e{opacity:0.55;}.gsst_a:hover .gsst_e,.gsst_a:focus .gsst_e{opacity:0.72;}.gsst_a:active .gsst_e{opacity:1;}.gsst_f{background:white;text-align:left}.gsst_g{background-color:white;border:1px solid #ccc;border-top-color:#d9d9d9;box-shadow:0 2px 4px rgba(0,0,0,0.2);-moz-box-shadow:0 2px 4px rgba(0,0,0,0.2);margin:-1px -3px;padding:0 6px}.gsst_h{background-color:white;height:1px;margin-bottom:-1px;position:relative;top:-1px}.gssb_a{padding:0 9px}.gsib_a{padding-right:8px;padding-left:8px}.gsst_a{padding-top:3px}.gssb_e{border:0}.gssb_l{margin:5px 0}.gssb_c .gsc-completion-container{position:static}.gssb_c{z-index:5000}.gsc-completion-container table{background:transparent;font-size:inherit;font-family:inherit}.gssb_c > tbody > tr,.gssb_c > tbody > tr > td,.gssb_d,.gssb_d > tbody > tr,.gssb_d > tbody > tr > td,.gssb_e,.gssb_e > tbody > tr,.gssb_e > tbody > tr > td{padding:0;margin:0;border:0}.gssb_a table,.gssb_a table tr,.gssb_a table tr td{padding:0;margin:0;border:0}</style><style type="text/css">.atlwdg-blanket {background:#000;height:100%;left:0;opacity:.5;position:fixed;top:0;width:100%;z-index:1000000;}
.atlwdg-popup {background:#fff;border:1px solid #666;position:fixed;top:50%;left:50%;z-index:10000011;}
.atlwdg-popup.atlwdg-box-shadow {-moz-box-shadow:10px 10px 20px rgba(0,0,0,0.5);-webkit-box-shadow:10px 10px 20px rgba(0,0,0,0.5);box-shadow:10px 10px 20px rgba(0,0,0,0.5);background-color:#fff;}
.atlwdg-hidden {display:none;}
.atlwdg-trigger {position: fixed; background: #013466; padding: 5px;border: 2px solid white;border-top: none; font-weight: bold; color: white; display:block;white-space:nowrap;text-decoration:none; font-family:arial, FreeSans, Helvetica, sans-serif;font-size:12px;box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.5);-webkit-box-shadow:5px 5px 10px rgba(0, 0, 0, 0.5); -moz-box-shadow:5px 5px 10px rgba(0, 0, 0, 0.5);border-radius: 0 0 5px 5px; -moz-border-radius: 0 0 5px 5px;}
a.atlwdg-trigger {text-decoration:none;}
.atlwdg-trigger.atlwdg-TOP {left: 45%;top:0; }
.atlwdg-trigger.atlwdg-RIGHT {left:100%; top:40%; -webkit-transform-origin:top left; -webkit-transform: rotate(90deg); -moz-transform: rotate(90deg); -moz-transform-origin:top left;-ms-transform: rotate(90deg); -ms-transform-origin:top left; }
.atlwdg-trigger.atlwdg-SUBTLE { right:0; bottom:0; border: 1px solid #ccc; border-bottom: none; border-right: none; background-color: #f5f5f5; color: #444; font-size: 11px; padding: 6px; box-shadow: -1px -1px 2px rgba(0, 0, 0, 0.5); border-radius: 2px 0 0 0; }
.atlwdg-loading {position:absolute;top:220px;left:295px;}</style></head>
  <body>
<div id="top-right">
        <div class="user-right">
                <ul id="header-menu-bar" class="ajs-menu-bar">
                <li class="normal"><a target="_blank" href="http://groups.google.com/group/mongodb-user">Forums</a></li>
                <li class="normal"><a target="_blank" href="http://blog.mongodb.org/">Blog</a></li>
                <li class="normal"><a href="http://www.mongodb.org/downloads">Download</a></li>
                <li class="normal"><a href="http://docs.mongodb.org/ecosystem/drivers/">Drivers</a></li>
                <li class="normal"><a href="http://www.10gen.com/events">Events</a></li>
                <li class="normal last"><a class="last" href="http://docs.mongodb.org/manual/meta/translation">Translations</a></li>
                </ul>
        </div>
</div>
<div id="header-db" class="spread">
        <div class="split">
                <div id="logo">
                        <div><a href="http://docs.mongodb.org/manual/"><img class="logo" src="Map-Reduce%20%E2%80%94%20MongoDB%20Manual_files/logo-mongodb.png" alt="MongoDB Logo"></a></div>
                </div>
        </div>

<div class="search-db"><div dir="ltr" id="___gcse_0"><form accept-charset="utf-8" class="gsc-search-box gsc-search-box-tools"><table class="gsc-search-box" cellpadding="0" cellspacing="0"><tbody><tr><td class="gsc-input"><div id="gsc-iw-id1" class="gsc-input-box"><table class="gstl_0 " id="gs_id0" style="width: 100%; padding: 0pt;" cellpadding="0" cellspacing="0"><tbody><tr><td class="gsib_a" id="gs_tti0"><input spellcheck="false" dir="ltr" id="gsc-i-id1" style="width: 100%; padding: 0pt; border: medium none; margin: 0pt; height: auto; outline: medium none;" title="search" name="search" class="gsc-input" size="10" autocomplete="off" type="text"></td><td class="gsib_b"><div dir="ltr" id="gs_st0" class="gsst_b"><a style="display: none;" href="javascript:void(0)" class="gsst_a"><span id="gs_cb0" class="gscb_a">×</span></a></div></td></tr></tbody></table></div></td><td class="gsc-search-button"><input title="search" class="gsc-search-button gsc-search-button-v2" src="Map-Reduce%20%E2%80%94%20MongoDB%20Manual_files/search_box_icon.png" type="image"></td><td class="gsc-clear-button"><div title="clear results" class="gsc-clear-button">&nbsp;</div></td></tr></tbody></table><table class="gsc-branding" cellpadding="0" cellspacing="0"><tbody><tr style="display: none;"><td class="gsc-branding-user-defined"></td><td class="gsc-branding-text"><div class="gsc-branding-text">powered by</div></td><td class="gsc-branding-img"><img class="gsc-branding-img" src="Map-Reduce%20%E2%80%94%20MongoDB%20Manual_files/small-logo.png"></td></tr></tbody></table></form></div></div>
<div id="etp">
<ul>
<li><a href="https://github.com/mongodb/docs/blob/master/source/applications/map-reduce.txt" target="_blank" title="Edit applications/map-reduce.txt on github">Edit this Page</a></li>
<li><a href="http://github.com/mongodb/docs" target="_blank" title="Fork the documentation on GitHub and contribute.">GitHub</a></li>
<li><a href="https://jira.mongodb.org/secure/CreateIssueDetails%21init.jspa?pid=10380&amp;issuetype=4&amp;priority=4&amp;summary=Comment+on%3a+%22applications/map-reduce%2Etxt%22" target="_blank" title="Report a problem with applications/map-reduce.txt on Jira">Report a problem</a></li>
</ul>
</div>
</div>  
    <div class="document">
      <div class="documentwrapper">
        <div class="bodywrapper">
          <div class="body">
            <div id="cse-results"><div id="___gcse_1"><div class="gsc-control-cse gsc-control-cse-en"><div dir="ltr" class="gsc-control-wrapper-cse"><div class="gsc-results-wrapper-nooverlay"><div class="gsc-tabsAreaInvisible"><div class="gsc-tabHeader gsc-inline-block gsc-tabhActive">Custom Search</div><span class="gs-spacer"> </span></div><div class="gsc-tabsAreaInvisible"></div><div class="gsc-above-wrapper-area-invisible"><table class="gsc-above-wrapper-area-container" cellpadding="0" cellspacing="0"><tbody><tr><td class="gsc-result-info-container"><div class="gsc-result-info-invisible"></div></td></tr></tbody></table></div><div class="gsc-adBlockInvisible"></div><div class="gsc-wrapper"><div class="gsc-adBlockInvisible"></div><div class="gsc-resultsbox-invisible"><div class="gsc-resultsRoot gsc-tabData gsc-tabdActive"><table class="gsc-resultsHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="gsc-twiddleRegionCell"><div class="gsc-twiddle"><div class="gsc-title">Web</div></div><div class="gsc-stats"></div><div class="gsc-results-selector gsc-all-results-active"><div title="show one result" class="gsc-result-selector gsc-one-result">&nbsp;</div><div title="show more results" class="gsc-result-selector gsc-more-results">&nbsp;</div><div title="show all results" class="gsc-result-selector gsc-all-results">&nbsp;</div></div></td><td class="gsc-configLabelCell"></td></tr></tbody></table><div><div class="gsc-expansionArea"></div></div></div></div></div></div></div></div></div></div>
            
  <div class="section" id="map-reduce">
<h1>Map-Reduce<a class="headerlink" href="#map-reduce" title="Permalink to this headline">¶</a></h1>
<p>Map-reduce operations can handle complex aggregation tasks. To perform
map-reduce operations, MongoDB provides the <a class="reference internal" href="http://docs.mongodb.org/manual/reference/command/mapReduce/#mapReduce" title="mapReduce"><tt class="xref mongodb mongodb-dbcommand docutils literal"><span class="pre">mapReduce</span></tt></a>
command and, in the <a class="reference internal" href="http://docs.mongodb.org/manual/reference/mongo/#mongo" title="mongo"><tt class="xref mongodb mongodb-program docutils literal"><span class="pre">mongo</span></tt></a> shell, the
<a class="reference internal" href="http://docs.mongodb.org/manual/reference/method/db.collection.mapReduce/#db.collection.mapReduce" title="db.collection.mapReduce"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">db.collection.mapReduce()</span></tt></a> wrapper method.</p>
<p>For many simple aggregation tasks, see the <a class="reference internal" href="http://docs.mongodb.org/manual/applications/aggregation/"><em>aggregation framework</em></a>.</p>
<div class="section" id="map-reduce-examples">
<span id="id1"></span><h2>Map-Reduce Examples<a class="headerlink" href="#map-reduce-examples" title="Permalink to this headline">¶</a></h2>
<p>This section provides some map-reduce examples in the <a class="reference internal" href="http://docs.mongodb.org/manual/reference/mongo/#mongo" title="mongo"><tt class="xref mongodb mongodb-program docutils literal"><span class="pre">mongo</span></tt></a>
shell using the <a class="reference internal" href="http://docs.mongodb.org/manual/reference/method/db.collection.mapReduce/#db.collection.mapReduce" title="db.collection.mapReduce"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">db.collection.mapReduce()</span></tt></a> method:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">mapReduce</span><span class="p">(</span>
                         <span class="o">&lt;</span><span class="nx">mapfunction</span><span class="o">&gt;</span><span class="p">,</span>
                         <span class="o">&lt;</span><span class="nx">reducefunction</span><span class="o">&gt;</span><span class="p">,</span>
                         <span class="p">{</span>
                           <span class="nx">out</span><span class="o">:</span> <span class="o">&lt;</span><span class="nx">collection</span><span class="o">&gt;</span><span class="p">,</span>
                           <span class="nx">query</span><span class="o">:</span> <span class="o">&lt;</span><span class="nb">document</span><span class="o">&gt;</span><span class="p">,</span>
                           <span class="nx">sort</span><span class="o">:</span> <span class="o">&lt;</span><span class="nb">document</span><span class="o">&gt;</span><span class="p">,</span>
                           <span class="nx">limit</span><span class="o">:</span> <span class="o">&lt;</span><span class="nx">number</span><span class="o">&gt;</span><span class="p">,</span>
                           <span class="nx">finalize</span><span class="o">:</span> <span class="o">&lt;</span><span class="kd">function</span><span class="o">&gt;</span><span class="p">,</span>
                           <span class="nx">scope</span><span class="o">:</span> <span class="o">&lt;</span><span class="nb">document</span><span class="o">&gt;</span><span class="p">,</span>
                           <span class="nx">jsMode</span><span class="o">:</span> <span class="o">&lt;</span><span class="kr">boolean</span><span class="o">&gt;</span><span class="p">,</span>
                           <span class="nx">verbose</span><span class="o">:</span> <span class="o">&lt;</span><span class="kr">boolean</span><span class="o">&gt;</span>
                         <span class="p">}</span>
                       <span class="p">)</span>
</pre></div>
</div>
<p>For more information on the parameters, see the
<a class="reference internal" href="http://docs.mongodb.org/manual/reference/method/db.collection.mapReduce/#db.collection.mapReduce" title="db.collection.mapReduce"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">db.collection.mapReduce()</span></tt></a> reference page .</p>
<p>Consider the following map-reduce operations on a collection <tt class="docutils literal"><span class="pre">orders</span></tt>
that contains documents of the following prototype:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">{</span>
     <span class="nx">_id</span><span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(</span><span class="s2">"50a8240b927d5d8b5891743c"</span><span class="p">),</span>
     <span class="nx">cust_id</span><span class="o">:</span> <span class="s2">"abc123"</span><span class="p">,</span>
     <span class="nx">ord_date</span><span class="o">:</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="s2">"Oct 04, 2012"</span><span class="p">),</span>
     <span class="nx">status</span><span class="o">:</span> <span class="s1">'A'</span><span class="p">,</span>
     <span class="nx">price</span><span class="o">:</span> <span class="mi">250</span><span class="p">,</span>
     <span class="nx">items</span><span class="o">:</span> <span class="p">[</span> <span class="p">{</span> <span class="nx">sku</span><span class="o">:</span> <span class="s2">"mmm"</span><span class="p">,</span> <span class="nx">qty</span><span class="o">:</span> <span class="mi">5</span><span class="p">,</span> <span class="nx">price</span><span class="o">:</span> <span class="mf">2.5</span> <span class="p">},</span>
              <span class="p">{</span> <span class="nx">sku</span><span class="o">:</span> <span class="s2">"nnn"</span><span class="p">,</span> <span class="nx">qty</span><span class="o">:</span> <span class="mi">5</span><span class="p">,</span> <span class="nx">price</span><span class="o">:</span> <span class="mf">2.5</span> <span class="p">}</span> <span class="p">]</span>
<span class="p">}</span>
</pre></div>
</div>
<div class="section" id="return-the-total-price-per-customer-id">
<h3>Return the Total Price Per Customer Id<a class="headerlink" href="#return-the-total-price-per-customer-id" title="Permalink to this headline">¶</a></h3>
<p>Perform map-reduce operation on the <tt class="docutils literal"><span class="pre">orders</span></tt> collection to group by
the <tt class="docutils literal"><span class="pre">cust_id</span></tt>, and for each <tt class="docutils literal"><span class="pre">cust_id</span></tt>, calculate the sum of the
<tt class="docutils literal"><span class="pre">price</span></tt> for each <tt class="docutils literal"><span class="pre">cust_id</span></tt>:</p>
<blockquote>
<div></div></blockquote>
<ol class="arabic">
<li><p class="first">Define the map function to process each input document:</p>
<ul class="simple">
<li>In the function, <tt class="docutils literal"><span class="pre">this</span></tt> refers to the document that the
map-reduce operation is processing.</li>
<li>The function maps the <tt class="docutils literal"><span class="pre">price</span></tt> to the <tt class="docutils literal"><span class="pre">cust_id</span></tt> for each
document and emits the <tt class="docutils literal"><span class="pre">cust_id</span></tt> and <tt class="docutils literal"><span class="pre">price</span></tt> pair.</li>
</ul>
<div class="highlight-javascript"><div class="highlight"><pre><span class="kd">var</span> <span class="nx">mapFunction1</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
                       <span class="nx">emit</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">cust_id</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">price</span><span class="p">);</span>
                   <span class="p">};</span>
</pre></div>
</div>
</li>
<li><p class="first">Define the corresponding reduce function with two arguments
<tt class="docutils literal"><span class="pre">keyCustId</span></tt> and <tt class="docutils literal"><span class="pre">valuesPrices</span></tt>:</p>
<ul class="simple">
<li>The <tt class="docutils literal"><span class="pre">valuesPrices</span></tt> is an array whose elements are the <tt class="docutils literal"><span class="pre">price</span></tt>
values emitted by the map function and grouped by <tt class="docutils literal"><span class="pre">keyCustId</span></tt>.</li>
<li>The function reduces the <tt class="docutils literal"><span class="pre">valuesPrice</span></tt> array to the
sum of its elements.</li>
</ul>
<div class="highlight-javascript"><div class="highlight"><pre><span class="kd">var</span> <span class="nx">reduceFunction1</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">keyCustId</span><span class="p">,</span> <span class="nx">valuesPrices</span><span class="p">)</span> <span class="p">{</span>
                          <span class="k">return</span> <span class="nb">Array</span><span class="p">.</span><span class="nx">sum</span><span class="p">(</span><span class="nx">valuesPrices</span><span class="p">);</span>
                      <span class="p">};</span>
</pre></div>
</div>
</li>
<li><p class="first">Perform the map-reduce on all documents in the <tt class="docutils literal"><span class="pre">orders</span></tt> collection
using the <tt class="docutils literal"><span class="pre">mapFunction1</span></tt> map function and the <tt class="docutils literal"><span class="pre">reduceFunction1</span></tt>
reduce function.</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">orders</span><span class="p">.</span><span class="nx">mapReduce</span><span class="p">(</span>
                     <span class="nx">mapFunction1</span><span class="p">,</span>
                     <span class="nx">reduceFunction1</span><span class="p">,</span>
                     <span class="p">{</span> <span class="nx">out</span><span class="o">:</span> <span class="s2">"map_reduce_example"</span> <span class="p">}</span>
                   <span class="p">)</span>
</pre></div>
</div>
<p>This operation outputs the results to a collection named
<tt class="docutils literal"><span class="pre">map_reduce_example</span></tt>. If the <tt class="docutils literal"><span class="pre">map_reduce_example</span></tt> collection
already exists, the operation will replace the contents with the
results of this map-reduce operation:</p>
</li>
</ol>
</div>
<div class="section" id="calculate-the-number-of-orders-total-quantity-and-average-quantity-per-item">
<h3>Calculate the Number of Orders, Total Quantity, and Average Quantity Per Item<a class="headerlink" href="#calculate-the-number-of-orders-total-quantity-and-average-quantity-per-item" title="Permalink to this headline">¶</a></h3>
<p>In this example you will perform a map-reduce operation on the <tt class="docutils literal"><span class="pre">orders</span></tt> collection, for
all documents that have an <tt class="docutils literal"><span class="pre">ord_date</span></tt> value
greater than <tt class="docutils literal"><span class="pre">01/01/2012</span></tt>. The operation groups by
the <tt class="docutils literal"><span class="pre">item.sku</span></tt> field, and for each <tt class="docutils literal"><span class="pre">sku</span></tt> calculates the number of orders and the
total quantity ordered. The operation concludes by calculating the average quantity per
order for each <tt class="docutils literal"><span class="pre">sku</span></tt> value:</p>
<ol class="arabic">
<li><p class="first">Define the map function to process each input document:</p>
<ul class="simple">
<li>In the function, <tt class="docutils literal"><span class="pre">this</span></tt> refers to the document that the
map-reduce operation is processing.</li>
<li>For each item, the function associates the <tt class="docutils literal"><span class="pre">sku</span></tt> with a new
object <tt class="docutils literal"><span class="pre">value</span></tt> that contains the <tt class="docutils literal"><span class="pre">count</span></tt> of <tt class="docutils literal"><span class="pre">1</span></tt> and the
item <tt class="docutils literal"><span class="pre">qty</span></tt> for the order and emits the <tt class="docutils literal"><span class="pre">sku</span></tt> and <tt class="docutils literal"><span class="pre">value</span></tt> pair.</li>
</ul>
<div class="highlight-javascript"><div class="highlight"><pre><span class="kd">var</span> <span class="nx">mapFunction2</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
                       <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">idx</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">idx</span> <span class="o">&lt;</span> <span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">idx</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
                           <span class="kd">var</span> <span class="nx">key</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">[</span><span class="nx">idx</span><span class="p">].</span><span class="nx">sku</span><span class="p">;</span>
                           <span class="kd">var</span> <span class="nx">value</span> <span class="o">=</span> <span class="p">{</span>
                                         <span class="nx">count</span><span class="o">:</span> <span class="mi">1</span><span class="p">,</span>
                                         <span class="nx">qty</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">[</span><span class="nx">idx</span><span class="p">].</span><span class="nx">qty</span>
                                       <span class="p">};</span>
                           <span class="nx">emit</span><span class="p">(</span><span class="nx">key</span><span class="p">,</span> <span class="nx">value</span><span class="p">);</span>
                       <span class="p">}</span>
                    <span class="p">};</span>
</pre></div>
</div>
</li>
<li><p class="first">Define the corresponding reduce function with two arguments
<tt class="docutils literal"><span class="pre">keySKU</span></tt> and <tt class="docutils literal"><span class="pre">valuesCountObjects</span></tt>:</p>
<ul class="simple">
<li><tt class="docutils literal"><span class="pre">valuesCountObjects</span></tt> is an array whose elements are the objects
mapped to the grouped <tt class="docutils literal"><span class="pre">keySKU</span></tt> values passed by map
function to the reducer function.</li>
<li>The function reduces the <tt class="docutils literal"><span class="pre">valuesCountObjects</span></tt> array to a single
object <tt class="docutils literal"><span class="pre">reducedValue</span></tt> that also contains the <tt class="docutils literal"><span class="pre">count</span></tt> and the
<tt class="docutils literal"><span class="pre">qty</span></tt> fields.</li>
<li>In <tt class="docutils literal"><span class="pre">reducedValue</span></tt>, the <tt class="docutils literal"><span class="pre">count</span></tt> field contains the sum of the
<tt class="docutils literal"><span class="pre">count</span></tt> fields from the individual array elements, and the
<tt class="docutils literal"><span class="pre">qty</span></tt> field contains the sum of the <tt class="docutils literal"><span class="pre">qty</span></tt> fields from the
individual array elements.</li>
</ul>
<div class="highlight-javascript"><div class="highlight"><pre><span class="kd">var</span> <span class="nx">reduceFunction2</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">keySKU</span><span class="p">,</span> <span class="nx">valuesCountObjects</span><span class="p">)</span> <span class="p">{</span>
                          <span class="nx">reducedValue</span> <span class="o">=</span> <span class="p">{</span> <span class="nx">count</span><span class="o">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">qty</span><span class="o">:</span> <span class="mi">0</span> <span class="p">};</span>

                          <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">idx</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">idx</span> <span class="o">&lt;</span> <span class="nx">valuesCountObjects</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">idx</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
                              <span class="nx">reducedValue</span><span class="p">.</span><span class="nx">count</span> <span class="o">+=</span> <span class="nx">valuesCountObjects</span><span class="p">[</span><span class="nx">idx</span><span class="p">].</span><span class="nx">count</span><span class="p">;</span>
                              <span class="nx">reducedValue</span><span class="p">.</span><span class="nx">qty</span> <span class="o">+=</span> <span class="nx">valuesCountObjects</span><span class="p">[</span><span class="nx">idx</span><span class="p">].</span><span class="nx">qty</span><span class="p">;</span>
                          <span class="p">}</span>

                          <span class="k">return</span> <span class="nx">reducedValue</span><span class="p">;</span>
                      <span class="p">};</span>
</pre></div>
</div>
</li>
<li><p class="first">Define a finalize function with two arguments <tt class="docutils literal"><span class="pre">key</span></tt> and
<tt class="docutils literal"><span class="pre">reducedValue</span></tt>. The function modifies the <tt class="docutils literal"><span class="pre">reducedValue</span></tt> object
to add a computed field named <tt class="docutils literal"><span class="pre">average</span></tt> and returns the modified
object:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="kd">var</span> <span class="nx">finalizeFunction2</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">key</span><span class="p">,</span> <span class="nx">reducedValue</span><span class="p">)</span> <span class="p">{</span>

                            <span class="nx">reducedValue</span><span class="p">.</span><span class="nx">average</span> <span class="o">=</span> <span class="nx">reducedValue</span><span class="p">.</span><span class="nx">qty</span><span class="o">/</span><span class="nx">reducedValue</span><span class="p">.</span><span class="nx">count</span><span class="p">;</span>

                            <span class="k">return</span> <span class="nx">reducedValue</span><span class="p">;</span>
                        <span class="p">};</span>
</pre></div>
</div>
</li>
<li><p class="first">Perform the map-reduce operation on the <tt class="docutils literal"><span class="pre">orders</span></tt> collection using
the <tt class="docutils literal"><span class="pre">mapFunction2</span></tt>, <tt class="docutils literal"><span class="pre">reduceFunction2</span></tt>, and
<tt class="docutils literal"><span class="pre">finalizeFunction2</span></tt> functions.</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">orders</span><span class="p">.</span><span class="nx">mapReduce</span><span class="p">(</span> <span class="nx">mapFunction2</span><span class="p">,</span>
                     <span class="nx">reduceFunction2</span><span class="p">,</span>
                     <span class="p">{</span>
                       <span class="nx">out</span><span class="o">:</span> <span class="p">{</span> <span class="nx">merge</span><span class="o">:</span> <span class="s2">"map_reduce_example"</span> <span class="p">},</span>
                       <span class="nx">query</span><span class="o">:</span> <span class="p">{</span> <span class="nx">ord_date</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$gt</span><span class="o">:</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="s1">'01/01/2012'</span><span class="p">)</span> <span class="p">}</span> <span class="p">},</span>
                       <span class="nx">finalize</span><span class="o">:</span> <span class="nx">finalizeFunction2</span>
                     <span class="p">}</span>
                   <span class="p">)</span>
</pre></div>
</div>
<p>This operation uses the <tt class="docutils literal"><span class="pre">query</span></tt> field to select only those
documents with <tt class="docutils literal"><span class="pre">ord_date</span></tt> greater than <tt class="docutils literal"><span class="pre">new</span>
<span class="pre">Date(01/01/2012)</span></tt>. Then it output the results to a collection
<tt class="docutils literal"><span class="pre">map_reduce_example</span></tt>. If the <tt class="docutils literal"><span class="pre">map_reduce_example</span></tt> collection
already exists, the operation will merge the existing contents with
the results of this map-reduce operation:</p>
</li>
</ol>
</div>
</div>
<div class="section" id="incremental-map-reduce">
<span id="map-reduce-incremental"></span><h2>Incremental Map-Reduce<a class="headerlink" href="#incremental-map-reduce" title="Permalink to this headline">¶</a></h2>
<p>If the map-reduce dataset is constantly growing, then rather than
performing the map-reduce operation over the entire dataset each time
you want to run map-reduce, you may want to perform an incremental
map-reduce.</p>
<p>To perform incremental map-reduce:</p>
<ol class="arabic simple">
<li>Run a map-reduce job over the current collection and output the
result to a separate collection.</li>
<li>When you have more data to process, run subsequent map-reduce job
with:<ul>
<li>the <tt class="docutils literal"><span class="pre">query</span></tt> parameter that specifies conditions that match
<em>only</em> the new documents.</li>
<li>the <tt class="docutils literal"><span class="pre">out</span></tt> parameter that specifies the <tt class="docutils literal"><span class="pre">reduce</span></tt> action to
merge the new results into the existing output collection.</li>
</ul>
</li>
</ol>
<p>Consider the following example where you schedule a map-reduce
operation on a <tt class="docutils literal"><span class="pre">sessions</span></tt> collection to run at the end of each day.</p>
<div class="section" id="data-setup">
<h3>Data Setup<a class="headerlink" href="#data-setup" title="Permalink to this headline">¶</a></h3>
<p>The <tt class="docutils literal"><span class="pre">sessions</span></tt> collection contains documents that log users’ session
each day, for example:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">sessions</span><span class="p">.</span><span class="nx">save</span><span class="p">(</span> <span class="p">{</span> <span class="nx">userid</span><span class="o">:</span> <span class="s2">"a"</span><span class="p">,</span> <span class="nx">ts</span><span class="o">:</span> <span class="nx">ISODate</span><span class="p">(</span><span class="s1">'2011-11-03 14:17:00'</span><span class="p">),</span> <span class="nx">length</span><span class="o">:</span> <span class="mi">95</span> <span class="p">}</span> <span class="p">);</span>
<span class="nx">db</span><span class="p">.</span><span class="nx">sessions</span><span class="p">.</span><span class="nx">save</span><span class="p">(</span> <span class="p">{</span> <span class="nx">userid</span><span class="o">:</span> <span class="s2">"b"</span><span class="p">,</span> <span class="nx">ts</span><span class="o">:</span> <span class="nx">ISODate</span><span class="p">(</span><span class="s1">'2011-11-03 14:23:00'</span><span class="p">),</span> <span class="nx">length</span><span class="o">:</span> <span class="mi">110</span> <span class="p">}</span> <span class="p">);</span>
<span class="nx">db</span><span class="p">.</span><span class="nx">sessions</span><span class="p">.</span><span class="nx">save</span><span class="p">(</span> <span class="p">{</span> <span class="nx">userid</span><span class="o">:</span> <span class="s2">"c"</span><span class="p">,</span> <span class="nx">ts</span><span class="o">:</span> <span class="nx">ISODate</span><span class="p">(</span><span class="s1">'2011-11-03 15:02:00'</span><span class="p">),</span> <span class="nx">length</span><span class="o">:</span> <span class="mi">120</span> <span class="p">}</span> <span class="p">);</span>
<span class="nx">db</span><span class="p">.</span><span class="nx">sessions</span><span class="p">.</span><span class="nx">save</span><span class="p">(</span> <span class="p">{</span> <span class="nx">userid</span><span class="o">:</span> <span class="s2">"d"</span><span class="p">,</span> <span class="nx">ts</span><span class="o">:</span> <span class="nx">ISODate</span><span class="p">(</span><span class="s1">'2011-11-03 16:45:00'</span><span class="p">),</span> <span class="nx">length</span><span class="o">:</span> <span class="mi">45</span> <span class="p">}</span> <span class="p">);</span>

<span class="nx">db</span><span class="p">.</span><span class="nx">sessions</span><span class="p">.</span><span class="nx">save</span><span class="p">(</span> <span class="p">{</span> <span class="nx">userid</span><span class="o">:</span> <span class="s2">"a"</span><span class="p">,</span> <span class="nx">ts</span><span class="o">:</span> <span class="nx">ISODate</span><span class="p">(</span><span class="s1">'2011-11-04 11:05:00'</span><span class="p">),</span> <span class="nx">length</span><span class="o">:</span> <span class="mi">105</span> <span class="p">}</span> <span class="p">);</span>
<span class="nx">db</span><span class="p">.</span><span class="nx">sessions</span><span class="p">.</span><span class="nx">save</span><span class="p">(</span> <span class="p">{</span> <span class="nx">userid</span><span class="o">:</span> <span class="s2">"b"</span><span class="p">,</span> <span class="nx">ts</span><span class="o">:</span> <span class="nx">ISODate</span><span class="p">(</span><span class="s1">'2011-11-04 13:14:00'</span><span class="p">),</span> <span class="nx">length</span><span class="o">:</span> <span class="mi">120</span> <span class="p">}</span> <span class="p">);</span>
<span class="nx">db</span><span class="p">.</span><span class="nx">sessions</span><span class="p">.</span><span class="nx">save</span><span class="p">(</span> <span class="p">{</span> <span class="nx">userid</span><span class="o">:</span> <span class="s2">"c"</span><span class="p">,</span> <span class="nx">ts</span><span class="o">:</span> <span class="nx">ISODate</span><span class="p">(</span><span class="s1">'2011-11-04 17:00:00'</span><span class="p">),</span> <span class="nx">length</span><span class="o">:</span> <span class="mi">130</span> <span class="p">}</span> <span class="p">);</span>
<span class="nx">db</span><span class="p">.</span><span class="nx">sessions</span><span class="p">.</span><span class="nx">save</span><span class="p">(</span> <span class="p">{</span> <span class="nx">userid</span><span class="o">:</span> <span class="s2">"d"</span><span class="p">,</span> <span class="nx">ts</span><span class="o">:</span> <span class="nx">ISODate</span><span class="p">(</span><span class="s1">'2011-11-04 15:37:00'</span><span class="p">),</span> <span class="nx">length</span><span class="o">:</span> <span class="mi">65</span> <span class="p">}</span> <span class="p">);</span>
</pre></div>
</div>
</div>
<div class="section" id="initial-map-reduce-of-current-collection">
<h3>Initial Map-Reduce of Current Collection<a class="headerlink" href="#initial-map-reduce-of-current-collection" title="Permalink to this headline">¶</a></h3>
<p>Run the first map-reduce operation as follows:</p>
<ol class="arabic">
<li><p class="first">Define the <tt class="docutils literal"><span class="pre">map</span></tt> function that maps the <tt class="docutils literal"><span class="pre">userid</span></tt> to an
object that contains the fields <tt class="docutils literal"><span class="pre">userid</span></tt>, <tt class="docutils literal"><span class="pre">total_time</span></tt>, <tt class="docutils literal"><span class="pre">count</span></tt>,
and <tt class="docutils literal"><span class="pre">avg_time</span></tt>:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="kd">var</span> <span class="nx">mapFunction</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
                      <span class="kd">var</span> <span class="nx">key</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">userid</span><span class="p">;</span>
                      <span class="kd">var</span> <span class="nx">value</span> <span class="o">=</span> <span class="p">{</span>
                                    <span class="nx">userid</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">userid</span><span class="p">,</span>
                                    <span class="nx">total_time</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span>
                                    <span class="nx">count</span><span class="o">:</span> <span class="mi">1</span><span class="p">,</span>
                                    <span class="nx">avg_time</span><span class="o">:</span> <span class="mi">0</span>
                                   <span class="p">};</span>

                      <span class="nx">emit</span><span class="p">(</span> <span class="nx">key</span><span class="p">,</span> <span class="nx">value</span> <span class="p">);</span>
                  <span class="p">};</span>
</pre></div>
</div>
</li>
<li><p class="first">Define the corresponding <tt class="docutils literal"><span class="pre">reduce</span></tt> function with two arguments
<tt class="docutils literal"><span class="pre">key</span></tt> and <tt class="docutils literal"><span class="pre">values</span></tt> to calculate the total time and the count.
The <tt class="docutils literal"><span class="pre">key</span></tt> corresponds to the <tt class="docutils literal"><span class="pre">userid</span></tt>, and the <tt class="docutils literal"><span class="pre">values</span></tt> is an
array whose elements corresponds to the individual objects mapped to the
<tt class="docutils literal"><span class="pre">userid</span></tt> in the <tt class="docutils literal"><span class="pre">mapFunction</span></tt>.</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="kd">var</span> <span class="nx">reduceFunction</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">key</span><span class="p">,</span> <span class="nx">values</span><span class="p">)</span> <span class="p">{</span>

                        <span class="kd">var</span> <span class="nx">reducedObject</span> <span class="o">=</span> <span class="p">{</span>
                                              <span class="nx">userid</span><span class="o">:</span> <span class="nx">key</span><span class="p">,</span>
                                              <span class="nx">total_time</span><span class="o">:</span> <span class="mi">0</span><span class="p">,</span>
                                              <span class="nx">count</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span>
                                              <span class="nx">avg_time</span><span class="o">:</span><span class="mi">0</span>
                                            <span class="p">};</span>

                        <span class="nx">values</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span> <span class="kd">function</span><span class="p">(</span><span class="nx">value</span><span class="p">)</span> <span class="p">{</span>
                                              <span class="nx">reducedObject</span><span class="p">.</span><span class="nx">total_time</span> <span class="o">+=</span> <span class="nx">value</span><span class="p">.</span><span class="nx">total_time</span><span class="p">;</span>
                                              <span class="nx">reducedObject</span><span class="p">.</span><span class="nx">count</span> <span class="o">+=</span> <span class="nx">value</span><span class="p">.</span><span class="nx">count</span><span class="p">;</span>
                                        <span class="p">}</span>
                                      <span class="p">);</span>
                        <span class="k">return</span> <span class="nx">reducedObject</span><span class="p">;</span>
                     <span class="p">};</span>
</pre></div>
</div>
</li>
<li><p class="first">Define <tt class="docutils literal"><span class="pre">finalize</span></tt> function with two arguments <tt class="docutils literal"><span class="pre">key</span></tt> and
<tt class="docutils literal"><span class="pre">reducedValue</span></tt>. The function modifies the <tt class="docutils literal"><span class="pre">reducedValue</span></tt> document
to add another field <tt class="docutils literal"><span class="pre">average</span></tt> and returns the modified document.</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="kd">var</span> <span class="nx">finalizeFunction</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">key</span><span class="p">,</span> <span class="nx">reducedValue</span><span class="p">)</span> <span class="p">{</span>

                          <span class="k">if</span> <span class="p">(</span><span class="nx">reducedValue</span><span class="p">.</span><span class="nx">count</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
                              <span class="nx">reducedValue</span><span class="p">.</span><span class="nx">avg_time</span> <span class="o">=</span> <span class="nx">reducedValue</span><span class="p">.</span><span class="nx">total_time</span> <span class="o">/</span> <span class="nx">reducedValue</span><span class="p">.</span><span class="nx">count</span><span class="p">;</span>

                          <span class="k">return</span> <span class="nx">reducedValue</span><span class="p">;</span>
                       <span class="p">};</span>
</pre></div>
</div>
</li>
<li><p class="first">Perform map-reduce on the <tt class="docutils literal"><span class="pre">session</span></tt> collection using the
<tt class="docutils literal"><span class="pre">mapFunction</span></tt>, the <tt class="docutils literal"><span class="pre">reduceFunction</span></tt>, and the
<tt class="docutils literal"><span class="pre">finalizeFunction</span></tt> functions. Output the results to a collection
<tt class="docutils literal"><span class="pre">session_stat</span></tt>. If the <tt class="docutils literal"><span class="pre">session_stat</span></tt> collection already exists,
the operation will replace the contents:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">sessions</span><span class="p">.</span><span class="nx">mapReduce</span><span class="p">(</span> <span class="nx">mapFunction</span><span class="p">,</span>
                       <span class="nx">reduceFunction</span><span class="p">,</span>
                       <span class="p">{</span>
                         <span class="nx">out</span><span class="o">:</span> <span class="p">{</span> <span class="nx">reduce</span><span class="o">:</span> <span class="s2">"session_stat"</span> <span class="p">},</span>
                         <span class="nx">finalize</span><span class="o">:</span> <span class="nx">finalizeFunction</span>
                       <span class="p">}</span>
                     <span class="p">)</span>
</pre></div>
</div>
</li>
</ol>
</div>
<div class="section" id="subsequent-incremental-map-reduce">
<h3>Subsequent Incremental Map-Reduce<a class="headerlink" href="#subsequent-incremental-map-reduce" title="Permalink to this headline">¶</a></h3>
<p>Later as the <tt class="docutils literal"><span class="pre">sessions</span></tt> collection grows, you can run additional
map-reduce operations. For example, add new documents to the
<tt class="docutils literal"><span class="pre">sessions</span></tt> collection:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">sessions</span><span class="p">.</span><span class="nx">save</span><span class="p">(</span> <span class="p">{</span> <span class="nx">userid</span><span class="o">:</span> <span class="s2">"a"</span><span class="p">,</span> <span class="nx">ts</span><span class="o">:</span> <span class="nx">ISODate</span><span class="p">(</span><span class="s1">'2011-11-05 14:17:00'</span><span class="p">),</span> <span class="nx">length</span><span class="o">:</span> <span class="mi">100</span> <span class="p">}</span> <span class="p">);</span>
<span class="nx">db</span><span class="p">.</span><span class="nx">sessions</span><span class="p">.</span><span class="nx">save</span><span class="p">(</span> <span class="p">{</span> <span class="nx">userid</span><span class="o">:</span> <span class="s2">"b"</span><span class="p">,</span> <span class="nx">ts</span><span class="o">:</span> <span class="nx">ISODate</span><span class="p">(</span><span class="s1">'2011-11-05 14:23:00'</span><span class="p">),</span> <span class="nx">length</span><span class="o">:</span> <span class="mi">115</span> <span class="p">}</span> <span class="p">);</span>
<span class="nx">db</span><span class="p">.</span><span class="nx">sessions</span><span class="p">.</span><span class="nx">save</span><span class="p">(</span> <span class="p">{</span> <span class="nx">userid</span><span class="o">:</span> <span class="s2">"c"</span><span class="p">,</span> <span class="nx">ts</span><span class="o">:</span> <span class="nx">ISODate</span><span class="p">(</span><span class="s1">'2011-11-05 15:02:00'</span><span class="p">),</span> <span class="nx">length</span><span class="o">:</span> <span class="mi">125</span> <span class="p">}</span> <span class="p">);</span>
<span class="nx">db</span><span class="p">.</span><span class="nx">sessions</span><span class="p">.</span><span class="nx">save</span><span class="p">(</span> <span class="p">{</span> <span class="nx">userid</span><span class="o">:</span> <span class="s2">"d"</span><span class="p">,</span> <span class="nx">ts</span><span class="o">:</span> <span class="nx">ISODate</span><span class="p">(</span><span class="s1">'2011-11-05 16:45:00'</span><span class="p">),</span> <span class="nx">length</span><span class="o">:</span> <span class="mi">55</span> <span class="p">}</span> <span class="p">);</span>
</pre></div>
</div>
<p>At the end of the day, perform incremental map-reduce on the
<tt class="docutils literal"><span class="pre">sessions</span></tt> collection but use the <tt class="docutils literal"><span class="pre">query</span></tt> field to select only the
new documents. Output the results to the collection <tt class="docutils literal"><span class="pre">session_stat</span></tt>,
but <tt class="docutils literal"><span class="pre">reduce</span></tt> the contents with the results of the incremental
map-reduce:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">sessions</span><span class="p">.</span><span class="nx">mapReduce</span><span class="p">(</span> <span class="nx">mapFunction</span><span class="p">,</span>
                       <span class="nx">reduceFunction</span><span class="p">,</span>
                       <span class="p">{</span>
                         <span class="nx">query</span><span class="o">:</span> <span class="p">{</span> <span class="nx">ts</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$gt</span><span class="o">:</span> <span class="nx">ISODate</span><span class="p">(</span><span class="s1">'2011-11-05 00:00:00'</span><span class="p">)</span> <span class="p">}</span> <span class="p">},</span>
                         <span class="nx">out</span><span class="o">:</span> <span class="p">{</span> <span class="nx">reduce</span><span class="o">:</span> <span class="s2">"session_stat"</span> <span class="p">},</span>
                         <span class="nx">finalize</span><span class="o">:</span> <span class="nx">finalizeFunction</span>
                       <span class="p">}</span>
                     <span class="p">);</span>
</pre></div>
</div>
</div>
</div>
<div class="section" id="temporary-collection">
<span id="map-reduce-temporary-collection"></span><h2>Temporary Collection<a class="headerlink" href="#temporary-collection" title="Permalink to this headline">¶</a></h2>
<p>The map-reduce operation uses a temporary collection during processing.
At completion, the map-reduce operation renames the temporary
collection. As a result, you  can perform a map-reduce operation
periodically with the same target collection name without affecting
the intermediate states. Use this mode when
generating statistical output collections on a regular basis.</p>
</div>
<div class="section" id="concurrency">
<span id="map-reduce-concurrency"></span><h2>Concurrency<a class="headerlink" href="#concurrency" title="Permalink to this headline">¶</a></h2>
<p>The map-reduce operation is composed of many tasks, including:</p>
<ul class="simple">
<li>reads from the input collection,</li>
<li>executions of the <tt class="docutils literal"><span class="pre">map</span></tt> function,</li>
<li>executions of the <tt class="docutils literal"><span class="pre">reduce</span></tt> function,</li>
<li>writes to the output collection.</li>
</ul>
<p>These various tasks take the following locks:</p>
<ul>
<li><p class="first">The read phase takes a read lock.  It yields every 100 documents.</p>
</li>
<li><p class="first">The JavaScript code (i.e. <tt class="docutils literal"><span class="pre">map</span></tt>, <tt class="docutils literal"><span class="pre">reduce</span></tt>, <tt class="docutils literal"><span class="pre">finalize</span></tt>
functions) is executed in a single thread, taking a JavaScript lock;
however, most JavaScript tasks in map-reduce are very short and
yield the lock frequently.</p>
</li>
<li><p class="first">The insert into the temporary collection takes a write lock for a
single write.</p>
<p>If the output collection does not exist, the creation of the output
collection takes a write lock.</p>
<p>If the output collection exists, then the output actions (i.e.
<tt class="docutils literal"><span class="pre">merge</span></tt>, <tt class="docutils literal"><span class="pre">replace</span></tt>, <tt class="docutils literal"><span class="pre">reduce</span></tt>) take a write lock.</p>
</li>
</ul>
<p>Although single-threaded, the map-reduce tasks interleave and appear to
run in parallel.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">The final write lock during post-processing makes the results appear
atomically. However, output actions <tt class="docutils literal"><span class="pre">merge</span></tt> and <tt class="docutils literal"><span class="pre">reduce</span></tt> may
take minutes to process. For the <tt class="docutils literal"><span class="pre">merge</span></tt> and <tt class="docutils literal"><span class="pre">reduce</span></tt>, the
<tt class="docutils literal"><span class="pre">nonAtomic</span></tt> flag is available. See the
<a class="reference internal" href="http://docs.mongodb.org/manual/reference/method/db.collection.mapReduce/#db.collection.mapReduce" title="db.collection.mapReduce"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">db.collection.mapReduce()</span></tt></a> reference for more information.</p>
</div>
</div>
<div class="section" id="sharded-cluster">
<span id="map-reduce-sharded-cluster"></span><h2>Sharded Cluster<a class="headerlink" href="#sharded-cluster" title="Permalink to this headline">¶</a></h2>
<div class="section" id="sharded-input">
<h3>Sharded Input<a class="headerlink" href="#sharded-input" title="Permalink to this headline">¶</a></h3>
<p>When using sharded collection as the input for a map-reduce operation,
<a class="reference internal" href="http://docs.mongodb.org/manual/reference/mongos/#mongos" title="mongos"><tt class="xref mongodb mongodb-program docutils literal"><span class="pre">mongos</span></tt></a> will automatically dispatch the map-reduce job to
each shard in parallel. There is no special option
required. <a class="reference internal" href="http://docs.mongodb.org/manual/reference/mongos/#mongos" title="mongos"><tt class="xref mongodb mongodb-program docutils literal"><span class="pre">mongos</span></tt></a> will wait for jobs on all shards to
finish.</p>
</div>
<div class="section" id="sharded-output">
<h3>Sharded Output<a class="headerlink" href="#sharded-output" title="Permalink to this headline">¶</a></h3>
<p>By default the output collection is not sharded. The process is:</p>
<ul>
<li><p class="first"><a class="reference internal" href="http://docs.mongodb.org/manual/reference/mongos/#mongos" title="mongos"><tt class="xref mongodb mongodb-program docutils literal"><span class="pre">mongos</span></tt></a> dispatches a map-reduce finish job to the shard
that will store the target collection.</p>
</li>
<li><p class="first">The target shard pulls results from all other shards, and runs a
final reduce/finalize operation, and write to the output.</p>
</li>
<li><p class="first">If using the <tt class="docutils literal"><span class="pre">sharded</span></tt> option to the <tt class="docutils literal"><span class="pre">out</span></tt> parameter, MongoDB
shards the output using <tt class="docutils literal"><span class="pre">_id</span></tt> field as the shard key.</p>
<p class="versionchanged">
<span class="versionmodified">Changed in version 2.2.</span></p>
</li>
<li><p class="first">If the output collection does not exist, MongoDB creates and shards
the collection on the <tt class="docutils literal"><span class="pre">_id</span></tt> field. If the collection is empty,
MongoDB creates <a class="reference internal" href="http://docs.mongodb.org/manual/reference/glossary/#term-chunk"><em class="xref std std-term">chunks</em></a> using the result of the first
stage of the map-reduce operation.</p>
</li>
<li><p class="first"><a class="reference internal" href="http://docs.mongodb.org/manual/reference/mongos/#mongos" title="mongos"><tt class="xref mongodb mongodb-program docutils literal"><span class="pre">mongos</span></tt></a> dispatches, in parallel, a map-reduce finish job
to every shard that owns a chunk.</p>
</li>
<li><p class="first">Each shard will pull the results it owns from all other shards, run a
final reduce/finalize, and write to the output collection.</p>
</li>
</ul>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<ul class="last simple">
<li>During later map-reduce jobs, MongoDB splits chunks as needed.</li>
<li>Balancing of chunks for the output collection is automatically
prevented during post-processing to avoid concurrency issues.</li>
</ul>
</div>
<p>In MongoDB 2.0:</p>
<ul class="simple">
<li><a class="reference internal" href="http://docs.mongodb.org/manual/reference/mongos/#mongos" title="mongos"><tt class="xref mongodb mongodb-program docutils literal"><span class="pre">mongos</span></tt></a> retrieves the results from each shard, and
performs merge sort to order the results, and performs a reduce/finalize as
needed. <a class="reference internal" href="http://docs.mongodb.org/manual/reference/mongos/#mongos" title="mongos"><tt class="xref mongodb mongodb-program docutils literal"><span class="pre">mongos</span></tt></a> then writes the result to the output
collection in sharded mode.</li>
<li>This model requires only a small amount of memory, even for large datasets.</li>
<li>Shard chunks are not automatically split during insertion. This
requires manual intervention until the chunks are granular and
balanced.</li>
</ul>
<div class="admonition warning">
<p class="first admonition-title">Warning</p>
<p class="last">For best results, only use the sharded output options for
<a class="reference internal" href="http://docs.mongodb.org/manual/reference/command/mapReduce/#mapReduce" title="mapReduce"><tt class="xref mongodb mongodb-dbcommand docutils literal"><span class="pre">mapReduce</span></tt></a> in version 2.2 or later.</p>
</div>
</div>
</div>
<div class="section" id="troubleshooting-map-reduce-operations">
<span id="map-reduce-troubleshooting"></span><h2>Troubleshooting Map-Reduce Operations<a class="headerlink" href="#troubleshooting-map-reduce-operations" title="Permalink to this headline">¶</a></h2>
<p>You can troubleshoot the <tt class="docutils literal"><span class="pre">map</span></tt> function and the <tt class="docutils literal"><span class="pre">reduce</span></tt> function
in the <a class="reference internal" href="http://docs.mongodb.org/manual/reference/mongo/#mongo" title="mongo"><tt class="xref mongodb mongodb-program docutils literal"><span class="pre">mongo</span></tt></a> shell.</p>
<div class="section" id="troubleshoot-the-map-function">
<span id="troubleshoot-map-function"></span><h3>Troubleshoot the Map Function<a class="headerlink" href="#troubleshoot-the-map-function" title="Permalink to this headline">¶</a></h3>
<p>You can verify the <tt class="docutils literal"><span class="pre">key</span></tt> and <tt class="docutils literal"><span class="pre">value</span></tt> pairs emitted by the <tt class="docutils literal"><span class="pre">map</span></tt>
function by writing your own <tt class="docutils literal"><span class="pre">emit</span></tt> function.</p>
<p>Consider a collection <tt class="docutils literal"><span class="pre">orders</span></tt> that contains documents of the
following prototype:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">{</span>
     <span class="nx">_id</span><span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(</span><span class="s2">"50a8240b927d5d8b5891743c"</span><span class="p">),</span>
     <span class="nx">cust_id</span><span class="o">:</span> <span class="s2">"abc123"</span><span class="p">,</span>
     <span class="nx">ord_date</span><span class="o">:</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="s2">"Oct 04, 2012"</span><span class="p">),</span>
     <span class="nx">status</span><span class="o">:</span> <span class="s1">'A'</span><span class="p">,</span>
     <span class="nx">price</span><span class="o">:</span> <span class="mi">250</span><span class="p">,</span>
     <span class="nx">items</span><span class="o">:</span> <span class="p">[</span> <span class="p">{</span> <span class="nx">sku</span><span class="o">:</span> <span class="s2">"mmm"</span><span class="p">,</span> <span class="nx">qty</span><span class="o">:</span> <span class="mi">5</span><span class="p">,</span> <span class="nx">price</span><span class="o">:</span> <span class="mf">2.5</span> <span class="p">},</span>
              <span class="p">{</span> <span class="nx">sku</span><span class="o">:</span> <span class="s2">"nnn"</span><span class="p">,</span> <span class="nx">qty</span><span class="o">:</span> <span class="mi">5</span><span class="p">,</span> <span class="nx">price</span><span class="o">:</span> <span class="mf">2.5</span> <span class="p">}</span> <span class="p">]</span>
<span class="p">}</span>
</pre></div>
</div>
<ol class="arabic">
<li><p class="first">Define the <tt class="docutils literal"><span class="pre">map</span></tt> function that maps the <tt class="docutils literal"><span class="pre">price</span></tt> to the
<tt class="docutils literal"><span class="pre">cust_id</span></tt> for each document and emits the <tt class="docutils literal"><span class="pre">cust_id</span></tt> and <tt class="docutils literal"><span class="pre">price</span></tt>
pair:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="kd">var</span> <span class="nx">map</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">emit</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">cust_id</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">price</span><span class="p">);</span>
<span class="p">};</span>
</pre></div>
</div>
</li>
<li><p class="first">Define the <tt class="docutils literal"><span class="pre">emit</span></tt> function to print the key and value:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="kd">var</span> <span class="nx">emit</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">key</span><span class="p">,</span> <span class="nx">value</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">print</span><span class="p">(</span><span class="s2">"emit"</span><span class="p">);</span>
    <span class="nx">print</span><span class="p">(</span><span class="s2">"key: "</span> <span class="o">+</span> <span class="nx">key</span> <span class="o">+</span> <span class="s2">"  value: "</span> <span class="o">+</span> <span class="nx">tojson</span><span class="p">(</span><span class="nx">value</span><span class="p">));</span>
<span class="p">}</span>
</pre></div>
</div>
</li>
<li><p class="first">Invoke the <tt class="docutils literal"><span class="pre">map</span></tt> function with a single document from the <tt class="docutils literal"><span class="pre">orders</span></tt>
collection:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="kd">var</span> <span class="nx">myDoc</span> <span class="o">=</span> <span class="nx">db</span><span class="p">.</span><span class="nx">orders</span><span class="p">.</span><span class="nx">findOne</span><span class="p">(</span> <span class="p">{</span> <span class="nx">_id</span><span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(</span><span class="s2">"50a8240b927d5d8b5891743c"</span><span class="p">)</span> <span class="p">}</span> <span class="p">);</span>
<span class="nx">map</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">myDoc</span><span class="p">);</span>
</pre></div>
</div>
</li>
<li><p class="first">Verify the key and value pair is as you expected.</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">emit</span>
<span class="nx">key</span><span class="o">:</span> <span class="nx">abc123</span> <span class="nx">value</span><span class="o">:</span><span class="mi">250</span>
</pre></div>
</div>
</li>
<li><p class="first">Invoke the <tt class="docutils literal"><span class="pre">map</span></tt> function with multiple documents from the <tt class="docutils literal"><span class="pre">orders</span></tt>
collection:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="kd">var</span> <span class="nx">myCursor</span> <span class="o">=</span> <span class="nx">db</span><span class="p">.</span><span class="nx">orders</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">cust_id</span><span class="o">:</span> <span class="s2">"abc123"</span> <span class="p">}</span> <span class="p">);</span>

<span class="k">while</span> <span class="p">(</span><span class="nx">myCursor</span><span class="p">.</span><span class="nx">hasNext</span><span class="p">())</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">doc</span> <span class="o">=</span> <span class="nx">myCursor</span><span class="p">.</span><span class="nx">next</span><span class="p">();</span>
    <span class="nx">print</span> <span class="p">(</span><span class="s2">"document _id= "</span> <span class="o">+</span> <span class="nx">tojson</span><span class="p">(</span><span class="nx">doc</span><span class="p">.</span><span class="nx">_id</span><span class="p">));</span>
    <span class="nx">map</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">doc</span><span class="p">);</span>
    <span class="nx">print</span><span class="p">();</span>
<span class="p">}</span>
</pre></div>
</div>
</li>
<li><p class="first">Verify the key and value pairs are as you expected.</p>
</li>
</ol>
</div>
<div class="section" id="troubleshoot-the-reduce-function">
<span id="troubleshoot-reduce-function"></span><h3>Troubleshoot the Reduce Function<a class="headerlink" href="#troubleshoot-the-reduce-function" title="Permalink to this headline">¶</a></h3>
<div class="section" id="confirm-output-type">
<h4>Confirm Output Type<a class="headerlink" href="#confirm-output-type" title="Permalink to this headline">¶</a></h4>
<p>You can test that the <tt class="docutils literal"><span class="pre">reduce</span></tt> function returns a value that is the
same type as the value emitted from the <tt class="docutils literal"><span class="pre">map</span></tt> function.</p>
<ol class="arabic">
<li><p class="first">Define a <tt class="docutils literal"><span class="pre">reduceFunction1</span></tt> function that takes the arguments
<tt class="docutils literal"><span class="pre">keyCustId</span></tt> and <tt class="docutils literal"><span class="pre">valuesPrices</span></tt>. <tt class="docutils literal"><span class="pre">valuesPrices</span></tt> is an array of
integers:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="kd">var</span> <span class="nx">reduceFunction1</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">keyCustId</span><span class="p">,</span> <span class="nx">valuesPrices</span><span class="p">)</span> <span class="p">{</span>
                          <span class="k">return</span> <span class="nb">Array</span><span class="p">.</span><span class="nx">sum</span><span class="p">(</span><span class="nx">valuesPrices</span><span class="p">);</span>
                      <span class="p">};</span>
</pre></div>
</div>
</li>
<li><p class="first">Define a sample array of integers:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="kd">var</span> <span class="nx">myTestValues</span> <span class="o">=</span> <span class="p">[</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">10</span> <span class="p">];</span>
</pre></div>
</div>
</li>
<li><p class="first">Invoke the <tt class="docutils literal"><span class="pre">reduceFunction1</span></tt> with <tt class="docutils literal"><span class="pre">myTestValues</span></tt>:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">reduceFunction1</span><span class="p">(</span><span class="s1">'myKey'</span><span class="p">,</span> <span class="nx">myTestValues</span><span class="p">);</span>
</pre></div>
</div>
</li>
<li><p class="first">Verify the <tt class="docutils literal"><span class="pre">reduceFunction1</span></tt> returned an integer:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="mi">20</span>
</pre></div>
</div>
</li>
<li><p class="first">Define a <tt class="docutils literal"><span class="pre">reduceFunction2</span></tt> function that takes the arguments
<tt class="docutils literal"><span class="pre">keySKU</span></tt> and <tt class="docutils literal"><span class="pre">valuesCountObjects</span></tt>. <tt class="docutils literal"><span class="pre">valuesCountObjects</span></tt> is an array of
documents that contain two fields <tt class="docutils literal"><span class="pre">count</span></tt> and <tt class="docutils literal"><span class="pre">qty</span></tt>:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="kd">var</span> <span class="nx">reduceFunction2</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">keySKU</span><span class="p">,</span> <span class="nx">valuesCountObjects</span><span class="p">)</span> <span class="p">{</span>
                          <span class="nx">reducedValue</span> <span class="o">=</span> <span class="p">{</span> <span class="nx">count</span><span class="o">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">qty</span><span class="o">:</span> <span class="mi">0</span> <span class="p">};</span>

                          <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">idx</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">idx</span> <span class="o">&lt;</span> <span class="nx">valuesCountObjects</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">idx</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
                              <span class="nx">reducedValue</span><span class="p">.</span><span class="nx">count</span> <span class="o">+=</span> <span class="nx">valuesCountObjects</span><span class="p">[</span><span class="nx">idx</span><span class="p">].</span><span class="nx">count</span><span class="p">;</span>
                              <span class="nx">reducedValue</span><span class="p">.</span><span class="nx">qty</span> <span class="o">+=</span> <span class="nx">valuesCountObjects</span><span class="p">[</span><span class="nx">idx</span><span class="p">].</span><span class="nx">qty</span><span class="p">;</span>
                          <span class="p">}</span>

                          <span class="k">return</span> <span class="nx">reducedValue</span><span class="p">;</span>
                      <span class="p">};</span>
</pre></div>
</div>
</li>
<li><p class="first">Define a sample array of documents:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="kd">var</span> <span class="nx">myTestObjects</span> <span class="o">=</span> <span class="p">[</span>
                      <span class="p">{</span> <span class="nx">count</span><span class="o">:</span> <span class="mi">1</span><span class="p">,</span> <span class="nx">qty</span><span class="o">:</span> <span class="mi">5</span> <span class="p">},</span>
                      <span class="p">{</span> <span class="nx">count</span><span class="o">:</span> <span class="mi">2</span><span class="p">,</span> <span class="nx">qty</span><span class="o">:</span> <span class="mi">10</span> <span class="p">},</span>
                      <span class="p">{</span> <span class="nx">count</span><span class="o">:</span> <span class="mi">3</span><span class="p">,</span> <span class="nx">qty</span><span class="o">:</span> <span class="mi">15</span> <span class="p">}</span>
                    <span class="p">];</span>
</pre></div>
</div>
</li>
<li><p class="first">Invoke the <tt class="docutils literal"><span class="pre">reduceFunction2</span></tt> with <tt class="docutils literal"><span class="pre">myTestObjects</span></tt>:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">reduceFunction2</span><span class="p">(</span><span class="s1">'myKey'</span><span class="p">,</span> <span class="nx">myTestObjects</span><span class="p">);</span>
</pre></div>
</div>
</li>
<li><p class="first">Verify the <tt class="docutils literal"><span class="pre">reduceFunction2</span></tt> returned a document with exactly the
<tt class="docutils literal"><span class="pre">count</span></tt> and the <tt class="docutils literal"><span class="pre">qty</span></tt> field:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">{</span> <span class="s2">"count"</span> <span class="o">:</span> <span class="mi">6</span><span class="p">,</span> <span class="s2">"qty"</span> <span class="o">:</span> <span class="mi">30</span> <span class="p">}</span>
</pre></div>
</div>
</li>
</ol>
</div>
<div class="section" id="ensure-insensitivity-to-the-order-of-mapped-values">
<h4>Ensure Insensitivity to the Order of Mapped Values<a class="headerlink" href="#ensure-insensitivity-to-the-order-of-mapped-values" title="Permalink to this headline">¶</a></h4>
<p>The <tt class="docutils literal"><span class="pre">reduce</span></tt> function takes a <tt class="docutils literal"><span class="pre">key</span></tt> and a <tt class="docutils literal"><span class="pre">values</span></tt> array as its
argument. You can test that the result of the <tt class="docutils literal"><span class="pre">reduce</span></tt> function does
not depend on the order of the elements in the <tt class="docutils literal"><span class="pre">values</span></tt> array.</p>
<ol class="arabic">
<li><p class="first">Define a sample <tt class="docutils literal"><span class="pre">values1</span></tt> array and a sample <tt class="docutils literal"><span class="pre">values2</span></tt> array
that only differ in the order of the array elements:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="kd">var</span> <span class="nx">values1</span> <span class="o">=</span> <span class="p">[</span>
                <span class="p">{</span> <span class="nx">count</span><span class="o">:</span> <span class="mi">1</span><span class="p">,</span> <span class="nx">qty</span><span class="o">:</span> <span class="mi">5</span> <span class="p">},</span>
                <span class="p">{</span> <span class="nx">count</span><span class="o">:</span> <span class="mi">2</span><span class="p">,</span> <span class="nx">qty</span><span class="o">:</span> <span class="mi">10</span> <span class="p">},</span>
                <span class="p">{</span> <span class="nx">count</span><span class="o">:</span> <span class="mi">3</span><span class="p">,</span> <span class="nx">qty</span><span class="o">:</span> <span class="mi">15</span> <span class="p">}</span>
              <span class="p">];</span>

<span class="kd">var</span> <span class="nx">values2</span> <span class="o">=</span> <span class="p">[</span>
                <span class="p">{</span> <span class="nx">count</span><span class="o">:</span> <span class="mi">3</span><span class="p">,</span> <span class="nx">qty</span><span class="o">:</span> <span class="mi">15</span> <span class="p">},</span>
                <span class="p">{</span> <span class="nx">count</span><span class="o">:</span> <span class="mi">1</span><span class="p">,</span> <span class="nx">qty</span><span class="o">:</span> <span class="mi">5</span> <span class="p">},</span>
                <span class="p">{</span> <span class="nx">count</span><span class="o">:</span> <span class="mi">2</span><span class="p">,</span> <span class="nx">qty</span><span class="o">:</span> <span class="mi">10</span> <span class="p">}</span>
              <span class="p">];</span>
</pre></div>
</div>
</li>
<li><p class="first">Define a <tt class="docutils literal"><span class="pre">reduceFunction2</span></tt> function that takes the arguments
<tt class="docutils literal"><span class="pre">keySKU</span></tt> and <tt class="docutils literal"><span class="pre">valuesCountObjects</span></tt>. <tt class="docutils literal"><span class="pre">valuesCountObjects</span></tt> is an array of
documents that contain two fields <tt class="docutils literal"><span class="pre">count</span></tt> and <tt class="docutils literal"><span class="pre">qty</span></tt>:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="kd">var</span> <span class="nx">reduceFunction2</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">keySKU</span><span class="p">,</span> <span class="nx">valuesCountObjects</span><span class="p">)</span> <span class="p">{</span>
                          <span class="nx">reducedValue</span> <span class="o">=</span> <span class="p">{</span> <span class="nx">count</span><span class="o">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">qty</span><span class="o">:</span> <span class="mi">0</span> <span class="p">};</span>

                          <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">idx</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">idx</span> <span class="o">&lt;</span> <span class="nx">valuesCountObjects</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">idx</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
                              <span class="nx">reducedValue</span><span class="p">.</span><span class="nx">count</span> <span class="o">+=</span> <span class="nx">valuesCountObjects</span><span class="p">[</span><span class="nx">idx</span><span class="p">].</span><span class="nx">count</span><span class="p">;</span>
                              <span class="nx">reducedValue</span><span class="p">.</span><span class="nx">qty</span> <span class="o">+=</span> <span class="nx">valuesCountObjects</span><span class="p">[</span><span class="nx">idx</span><span class="p">].</span><span class="nx">qty</span><span class="p">;</span>
                          <span class="p">}</span>

                          <span class="k">return</span> <span class="nx">reducedValue</span><span class="p">;</span>
                      <span class="p">};</span>
</pre></div>
</div>
</li>
<li><p class="first">Invoke the <tt class="docutils literal"><span class="pre">reduceFunction2</span></tt> first with <tt class="docutils literal"><span class="pre">values1</span></tt> and then with
<tt class="docutils literal"><span class="pre">values2</span></tt>:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">reduceFunction2</span><span class="p">(</span><span class="s1">'myKey'</span><span class="p">,</span> <span class="nx">values1</span><span class="p">);</span>
<span class="nx">reduceFunction2</span><span class="p">(</span><span class="s1">'myKey'</span><span class="p">,</span> <span class="nx">values2</span><span class="p">);</span>
</pre></div>
</div>
</li>
<li><p class="first">Verify the <tt class="docutils literal"><span class="pre">reduceFunction2</span></tt> returned the same result:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">{</span> <span class="s2">"count"</span> <span class="o">:</span> <span class="mi">6</span><span class="p">,</span> <span class="s2">"qty"</span> <span class="o">:</span> <span class="mi">30</span> <span class="p">}</span>
</pre></div>
</div>
</li>
</ol>
</div>
<div class="section" id="ensure-reduce-function-idempotentcy">
<h4>Ensure Reduce Function Idempotentcy<a class="headerlink" href="#ensure-reduce-function-idempotentcy" title="Permalink to this headline">¶</a></h4>
<p>Because the map-reduce operation may call a <tt class="docutils literal"><span class="pre">reduce</span></tt> multiple times
for the same key, the <tt class="docutils literal"><span class="pre">reduce</span></tt> function must return a value of the
same type as the value emitted from the <tt class="docutils literal"><span class="pre">map</span></tt> function. You can test
that the <tt class="docutils literal"><span class="pre">reduce</span></tt> function process “reduced” values without
affecting the <em>final</em> value.</p>
<ol class="arabic">
<li><p class="first">Define a <tt class="docutils literal"><span class="pre">reduceFunction2</span></tt> function that takes the arguments
<tt class="docutils literal"><span class="pre">keySKU</span></tt> and <tt class="docutils literal"><span class="pre">valuesCountObjects</span></tt>. <tt class="docutils literal"><span class="pre">valuesCountObjects</span></tt> is an array of
documents that contain two fields <tt class="docutils literal"><span class="pre">count</span></tt> and <tt class="docutils literal"><span class="pre">qty</span></tt>:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="kd">var</span> <span class="nx">reduceFunction2</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">keySKU</span><span class="p">,</span> <span class="nx">valuesCountObjects</span><span class="p">)</span> <span class="p">{</span>
                          <span class="nx">reducedValue</span> <span class="o">=</span> <span class="p">{</span> <span class="nx">count</span><span class="o">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">qty</span><span class="o">:</span> <span class="mi">0</span> <span class="p">};</span>

                          <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">idx</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">idx</span> <span class="o">&lt;</span> <span class="nx">valuesCountObjects</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">idx</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
                              <span class="nx">reducedValue</span><span class="p">.</span><span class="nx">count</span> <span class="o">+=</span> <span class="nx">valuesCountObjects</span><span class="p">[</span><span class="nx">idx</span><span class="p">].</span><span class="nx">count</span><span class="p">;</span>
                              <span class="nx">reducedValue</span><span class="p">.</span><span class="nx">qty</span> <span class="o">+=</span> <span class="nx">valuesCountObjects</span><span class="p">[</span><span class="nx">idx</span><span class="p">].</span><span class="nx">qty</span><span class="p">;</span>
                          <span class="p">}</span>

                          <span class="k">return</span> <span class="nx">reducedValue</span><span class="p">;</span>
                      <span class="p">};</span>
</pre></div>
</div>
</li>
<li><p class="first">Define a sample key:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="kd">var</span> <span class="nx">myKey</span> <span class="o">=</span> <span class="s1">'myKey'</span><span class="p">;</span>
</pre></div>
</div>
</li>
<li><p class="first">Define a sample <tt class="docutils literal"><span class="pre">valuesIdempotent</span></tt> array that contains an element that is a
call to the <tt class="docutils literal"><span class="pre">reduceFunction2</span></tt> function:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="kd">var</span> <span class="nx">valuesIdempotent</span> <span class="o">=</span> <span class="p">[</span>
                         <span class="p">{</span> <span class="nx">count</span><span class="o">:</span> <span class="mi">1</span><span class="p">,</span> <span class="nx">qty</span><span class="o">:</span> <span class="mi">5</span> <span class="p">},</span>
                         <span class="p">{</span> <span class="nx">count</span><span class="o">:</span> <span class="mi">2</span><span class="p">,</span> <span class="nx">qty</span><span class="o">:</span> <span class="mi">10</span> <span class="p">},</span>
                         <span class="nx">reduceFunction2</span><span class="p">(</span><span class="nx">myKey</span><span class="p">,</span> <span class="p">[</span> <span class="p">{</span> <span class="nx">count</span><span class="o">:</span><span class="mi">3</span><span class="p">,</span> <span class="nx">qty</span><span class="o">:</span> <span class="mi">15</span> <span class="p">}</span> <span class="p">]</span> <span class="p">)</span>
                       <span class="p">];</span>
</pre></div>
</div>
</li>
<li><p class="first">Define a sample <tt class="docutils literal"><span class="pre">values1</span></tt> array that combines the values passed to
<tt class="docutils literal"><span class="pre">reduceFunction2</span></tt>:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="kd">var</span> <span class="nx">values1</span> <span class="o">=</span> <span class="p">[</span>
                <span class="p">{</span> <span class="nx">count</span><span class="o">:</span> <span class="mi">1</span><span class="p">,</span> <span class="nx">qty</span><span class="o">:</span> <span class="mi">5</span> <span class="p">},</span>
                <span class="p">{</span> <span class="nx">count</span><span class="o">:</span> <span class="mi">2</span><span class="p">,</span> <span class="nx">qty</span><span class="o">:</span> <span class="mi">10</span> <span class="p">},</span>
                <span class="p">{</span> <span class="nx">count</span><span class="o">:</span> <span class="mi">3</span><span class="p">,</span> <span class="nx">qty</span><span class="o">:</span> <span class="mi">15</span> <span class="p">}</span>
              <span class="p">];</span>
</pre></div>
</div>
</li>
<li><p class="first">Invoke the <tt class="docutils literal"><span class="pre">reduceFunction2</span></tt> first with <tt class="docutils literal"><span class="pre">myKey</span></tt> and
<tt class="docutils literal"><span class="pre">valuesIdempotent</span></tt> and then with <tt class="docutils literal"><span class="pre">myKey</span></tt> and <tt class="docutils literal"><span class="pre">values1</span></tt>:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">reduceFunction2</span><span class="p">(</span><span class="nx">myKey</span><span class="p">,</span> <span class="nx">valuesIdempotent</span><span class="p">);</span>
<span class="nx">reduceFunction2</span><span class="p">(</span><span class="nx">myKey</span><span class="p">,</span> <span class="nx">values1</span><span class="p">);</span>
</pre></div>
</div>
</li>
<li><p class="first">Verify the <tt class="docutils literal"><span class="pre">reduceFunction2</span></tt> returned the same result:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">{</span> <span class="s2">"count"</span> <span class="o">:</span> <span class="mi">6</span><span class="p">,</span> <span class="s2">"qty"</span> <span class="o">:</span> <span class="mi">30</span> <span class="p">}</span>
</pre></div>
</div>
</li>
</ol>
</div>
</div>
</div>
</div>


<div id="btnv">
<ul id="btnvl">
<li id="btnvpr"><a href="http://docs.mongodb.org/manual/reference/aggregation/" title="Previous Section: Aggregation Framework Reference">&lt; &nbsp; Aggregation Framework Reference</a></li>
<li id="btnvup"><a href="http://docs.mongodb.org/manual/aggregation/" title="Parent Section: Aggregation">/\&nbsp; Aggregation</a></li>
<li id="btnvnx"><a href="http://docs.mongodb.org/manual/reference/simple-aggregation/" title="Next Section: Simple Aggregation Methods and Commands">Simple Aggregation Methods and Commands &nbsp;&gt;</a></li>
</ul>
</div>
</div>
        </div>
      </div>
      <div class="sphinxsidebar">
        <div class="sphinxsidebarwrapper"><h3><a href="http://docs.mongodb.org/manual/contents/">MongoDB Manual</a>

<small><a href="http://docs.mongodb.org/manual/genindex/">(Index)</a></small>

</h3>

<ul class="current">
<li class="toctree-l1"><a class="reference internal" href="http://docs.mongodb.org/manual/installation/">Installing MongoDB</a></li>
<li class="toctree-l1"><a class="reference internal" href="http://docs.mongodb.org/manual/administration/">Administration</a></li>
<li class="toctree-l1"><a class="reference internal" href="http://docs.mongodb.org/manual/security/">Security</a></li>
<li class="toctree-l1"><a class="reference internal" href="http://docs.mongodb.org/manual/crud/">Core MongoDB Operations (CRUD)</a></li>
<li class="toctree-l1 current"><a class="reference internal" href="http://docs.mongodb.org/manual/aggregation/">Aggregation</a><ul class="current">
<li class="toctree-l2"><a class="reference internal" href="http://docs.mongodb.org/manual/applications/aggregation/">Aggregation Framework</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://docs.mongodb.org/manual/tutorial/aggregation-examples/">Aggregation Framework Examples</a></li>
<li class="toctree-l2"><a class="reference internal" href="http://docs.mongodb.org/manual/reference/aggregation/">Aggregation Framework Reference</a></li>
<li class="toctree-l2 current"><a class="current reference internal" href="">Map-Reduce</a><ul>
<li class="toctree-l3"><a class="reference internal" href="#map-reduce-examples">Map-Reduce Examples</a><ul>
<li class="toctree-l4"><a class="reference internal" href="#return-the-total-price-per-customer-id">Return the Total Price Per Customer Id</a></li>
<li class="toctree-l4"><a class="reference internal" href="#calculate-the-number-of-orders-total-quantity-and-average-quantity-per-item">Calculate the Number of Orders, Total Quantity, and Average Quantity Per Item</a></li>
</ul>
</li>
<li class="toctree-l3"><a class="reference internal" href="#incremental-map-reduce">Incremental Map-Reduce</a><ul>
<li class="toctree-l4"><a class="reference internal" href="#data-setup">Data Setup</a></li>
<li class="toctree-l4"><a class="reference internal" href="#initial-map-reduce-of-current-collection">Initial Map-Reduce of Current Collection</a></li>
<li class="toctree-l4"><a class="reference internal" href="#subsequent-incremental-map-reduce">Subsequent Incremental Map-Reduce</a></li>
</ul>
</li>
<li class="toctree-l3"><a class="reference internal" href="#temporary-collection">Temporary Collection</a></li>
<li class="toctree-l3"><a class="reference internal" href="#concurrency">Concurrency</a></li>
<li class="toctree-l3"><a class="reference internal" href="#sharded-cluster">Sharded Cluster</a><ul>
<li class="toctree-l4"><a class="reference internal" href="#sharded-input">Sharded Input</a></li>
<li class="toctree-l4"><a class="reference internal" href="#sharded-output">Sharded Output</a></li>
</ul>
</li>
<li class="toctree-l3"><a class="reference internal" href="#troubleshooting-map-reduce-operations">Troubleshooting Map-Reduce Operations</a><ul>
<li class="toctree-l4"><a class="reference internal" href="#troubleshoot-the-map-function">Troubleshoot the Map Function</a></li>
<li class="toctree-l4"><a class="reference internal" href="#troubleshoot-the-reduce-function">Troubleshoot the Reduce Function</a><ul>
<li class="toctree-l5"><a class="reference internal" href="#confirm-output-type">Confirm Output Type</a></li>
<li class="toctree-l5"><a class="reference internal" href="#ensure-insensitivity-to-the-order-of-mapped-values">Ensure Insensitivity to the Order of Mapped Values</a></li>
<li class="toctree-l5"><a class="reference internal" href="#ensure-reduce-function-idempotentcy">Ensure Reduce Function Idempotentcy</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="http://docs.mongodb.org/manual/reference/simple-aggregation/">Simple Aggregation Methods and Commands</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="http://docs.mongodb.org/manual/indexes/">Indexes</a></li>
<li class="toctree-l1"><a class="reference internal" href="http://docs.mongodb.org/manual/replication/">Replication</a></li>
<li class="toctree-l1"><a class="reference internal" href="http://docs.mongodb.org/manual/sharding/">Sharding</a></li>
<li class="toctree-l1"><a class="reference internal" href="http://docs.mongodb.org/manual/applications/">Application Development</a></li>
<li class="toctree-l1"><a class="reference internal" href="http://docs.mongodb.org/manual/mongo/">Using the <tt class="docutils literal"><span class="pre">mongo</span></tt> Shell</a></li>
<li class="toctree-l1"><a class="reference internal" href="http://docs.mongodb.org/manual/use-cases/">Use Cases</a></li>
<li class="toctree-l1"><a class="reference internal" href="http://docs.mongodb.org/manual/tutorial/">MongoDB Tutorials</a></li>
<li class="toctree-l1"><a class="reference internal" href="http://docs.mongodb.org/manual/faq/">Frequently Asked Questions</a></li>
<li class="toctree-l1"><a class="reference internal" href="http://docs.mongodb.org/manual/reference/">Reference</a></li>
<li class="toctree-l1"><a class="reference internal" href="http://docs.mongodb.org/manual/about/">About MongoDB Documentation</a></li>
</ul>

<h3 style="padding-bottom: 1em;"><a href="http://www.mongodb.org/about/">MongoDB.org</a></h3>
<h3 style="padding-bottom: 1em;"><a href="http://docs.mongodb.org/ecosystem/">MongoDB Ecosystem</a></h3><h3>Formats</h3>
<ul class="this-page-menu">
  <li><a href="http://docs.mongodb.org/master/single/">MongoDB Manual, Single HTML Page</a></li>
  <li><a href="http://docs.mongodb.org/master/MongoDB-Manual-master.pdf" rel="nofollow">MongoDB Manual, PDF Format</a></li>
  <li><a href="http://docs.mongodb.org/master/MongoDB-Manual-master.epub" rel="nofollow">MongoDB Manual, ePub Format</a></li>
</ul><h3>MongoDB Resources</h3>

<ul>
 <li><strong>Getting Started</strong>
   <ul>
     <li><a href="http://www.mongodb.org/about/introduction">Introduction</a></li>
     <li><a href="http://www.mongodb.org/downloads">Downloads</a></li>
   </ul>
 </li>
 <li><strong><a href="http://www.mongodb.org/about/community">Community</a> and <a href="http://docs.mongodb.org/ecosystem/">Ecosystem</a></strong>
   <ul>
     <li><a href="http://www.10gen.com/">10gen</a></li>
     <li><a href="http://www.10gen.com/events">MongoDB Events</a></li>
     <li><a href="http://planet.mongodb.org/">Planet MongoDB</a></li>
     <li><a href="http://mongodb.org/about/community/masters">MongoDB Masters</a></li>
     <li><a href="http://www.10gen.com/presentations">Slides and Video</a></li>
     <li><a href="http://docs.mongodb.org/ecosystem/platforms/">Hosting Center</a></li>
     <li><a href="http://docs.mongodb.org/ecosystem/platforms/windows">Windows</a></li>
     <li><a href="http://www.10gen.com/products/mms/">MongoDB Monitoring Service</a> (<a href="http://mms.10gen.com/help/">docs</a>)</li>
     <li><a href="http://docs.mongodb.org/ecosystem/tools/administration-interfaces/">Administrative Interfaces</a></li>
     <li><a href="http://www.10gen.com/books/">MongoDB Books</a></li>
   </ul>
 </li>
 <li><strong><a href="http://docs.mongodb.org/ecosystem/drivers/">Drivers</a></strong>
   <ul>
     <li><a href="http://docs.mongodb.org/ecosystem/drivers/javascript">JavaScript</a> (<a href="http://api.mongodb.org/js/current">docs</a>)</li>
     <li><a href="http://docs.mongodb.org/ecosystem/drivers/python">Python</a> (<a href="http://api.mongodb.org/python/current">docs</a>)</li>
     <li><a href="http://docs.mongodb.org/ecosystem/drivers/ruby">Ruby</a> (<a href="http://api.mongodb.org/ruby/current">docs</a>)</li>
     <li><a href="http://docs.mongodb.org/ecosystem/drivers/php">PHP</a> (<a href="http://php.net/mongo/">docs</a>)</li>
     <li><a href="http://docs.mongodb.org/ecosystem/drivers/perl">Perl</a> (<a href="http://api.mongodb.org/perl/current/">docs</a>)</li>
     <li><a href="http://docs.mongodb.org/ecosystem/drivers/java">Java</a> (<a href="http://api.mongodb.org/java/current">docs</a>)</li>
     <li><a href="http://docs.mongodb.org/ecosystem/drivers/scala">Scala</a> (<a href="http://api.mongodb.org/scala/casbah/current/">docs</a>)</li>
     <li><a href="http://docs.mongodb.org/ecosystem/drivers/csharp">C#</a> (<a href="http://api.mongodb.org/csharp/current/">docs</a>)</li>
     <li><a href="http://docs.mongodb.org/ecosystem/drivers/c">C</a> (<a href="http://api.mongodb.org/c/current/">docs</a>)</li>
     <li><a href="http://docs.mongodb.org/ecosystem/drivers/cpp">C++</a> (<a href="http://api.mongodb.org/cplusplus/current/">docs</a>)</li>
     <li><a href="http://hackage.haskell.org/package/mongoDB">Haskell</a> (<a href="http://api.mongodb.org/haskell">docs</a>)</li>
     <li><a href="http://docs.mongodb.org/ecosystem/drivers/erlang">Erlang</a> (<a href="http://api.mongodb.org/erlang">docs</a>)</li>
   </ul>
 </li>
</ul>
        </div>
      </div>
      <div class="clearer"></div>
    </div>
  <div class="footer">
    <p>
       © <a href="">Copyright</a> 2011-2013, 10gen, Inc. 
       MongoDB®, Mongo®, and the leaf logo are registered trademarks of 10gen, Inc.
    </p>
  </div><script type="text/javascript">
var _gaq = _gaq || [];
var pluginUrl = (('https:' == document.location.protocol) ? 'https://ssl.' : 'http://www.') + 'google-analytics.com/plugins/ga/inpage_linkid.js';
_gaq.push(['_require', 'inpage_linkid', pluginUrl]);
_gaq.push(['_setAccount', 'UA-7301842-8']);
_gaq.push(['_setDomainName', 'docs.mongodb.org']);
_gaq.push(['_trackPageview']);
(function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0];
        s.parentNode.insertBefore(ga, s);
        })();
</script>

<script type="text/javascript">
document.write(unescape("%3Cscript src='" + document.location.protocol + "//munchkin.marketo.net/munchkin.js' type='text/javascript'%3E%3C/script%3E"));
</script><script src="Map-Reduce%20%E2%80%94%20MongoDB%20Manual_files/munchkin.htm" type="text/javascript"></script>
<script>try { mktoMunchkin("017-HGS-593"); } catch(e) {}</script><script type="text/javascript">
jQuery.ajax({
    url: "https://jira.mongodb.org/s/en_US-bxctp1/782/6/1.2.4/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs.js?collectorId=298ba4e7",
    type: "get",
    cache: true,
    dataType: "script"
});
window.ATL_JQ_PAGE_PROPS =  {
"triggerFunction": function(showCollectorDialog) {
jQuery("#jirafeedback").click(function(e) {e.preventDefault();showCollectorDialog();});
jQuery("#jirafooter").click(function(e) {e.preventDefault();showCollectorDialog();});
}};
</script>

<table class="gstl_0 gssb_c" style="width: 129px; display: none; top: 70px; left: 751px; position: absolute;" cellpadding="0" cellspacing="0"><tbody><tr><td class="gssb_f"></td><td style="width: 100%;" class="gssb_e"></td></tr></tbody></table><div style="display: none;" id="atlwdg-blanket" class="atlwdg-blanket"></div><div class="atlwdg-popup atlwdg-box-shadow atlwdg-hidden" id="atlwdg-container"></div></body></html>