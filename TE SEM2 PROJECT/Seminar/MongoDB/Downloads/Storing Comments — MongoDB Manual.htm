<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head>
    <title>Storing Comments — MongoDB Manual</title>

    <link rel="shortcut icon" href="http://media.mongodb.org/favicon.ico">
    <meta name="robots" content="index">
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <link rel="canonical" href="http://docs.mongodb.org/manual/use-cases/storing-comments">

    
    
    <link rel="stylesheet" href="Storing%20Comments%20%E2%80%94%20MongoDB%20Manual_files/mongodb-docs.css" type="text/css">
    <link rel="stylesheet" href="Storing%20Comments%20%E2%80%94%20MongoDB%20Manual_files/pygments.css" type="text/css">
      
    <script src="Storing%20Comments%20%E2%80%94%20MongoDB%20Manual_files/cse.js" async="" type="text/javascript"></script><script type="text/javascript">
      var DOCUMENTATION_OPTIONS = {
        URL_ROOT:    '../../',
        VERSION:     '2.2.3',
        COLLAPSE_INDEX: false,
        FILE_SUFFIX: '',
        HAS_SOURCE:  false
      };
    </script>
    <script type="text/javascript" src="Storing%20Comments%20%E2%80%94%20MongoDB%20Manual_files/jquery.js"></script>
    <script type="text/javascript" src="Storing%20Comments%20%E2%80%94%20MongoDB%20Manual_files/underscore.js"></script>
    <script type="text/javascript" src="Storing%20Comments%20%E2%80%94%20MongoDB%20Manual_files/doctools.js"></script>
      <link rel="search" type="application/opensearchdescription+xml" href="http://docs.mongodb.org/osd.xml" title="MongoDB Help">
<link rel="author" title="About these documents" href="http://docs.mongodb.org/manual/about/">
<link rel="top" title="MongoDB Manual" href="http://docs.mongodb.org/manual/">
<link rel="up" title="Use Cases" href="http://docs.mongodb.org/manual/use-cases/">
<link rel="next" title="Write a Tumblelog Application with Django MongoDB Engine" href="http://docs.mongodb.org/manual/tutorial/write-a-tumblelog-application-with-django-mongodb-engine/">
<link rel="prev" title="Metadata and Asset Management" href="http://docs.mongodb.org/manual/use-cases/metadata-and-asset-management/">
<!-- Put the following javascript before the closing </head> tag. -->
<script>
  (function() {
    var cx = '017213726194841070573:WMX6838984';
    var gcse = document.createElement('script'); gcse.type = 'text/javascript'; gcse.async = true;
    gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(gcse, s);
  })();
</script>
  <script type="text/javascript" src="Storing%20Comments%20%E2%80%94%20MongoDB%20Manual_files/jsapi"></script><link rel="stylesheet" href="Storing%20Comments%20%E2%80%94%20MongoDB%20Manual_files/defaulten.css" type="text/css"><link rel="stylesheet" href="Storing%20Comments%20%E2%80%94%20MongoDB%20Manual_files/default.css" type="text/css"><script src="Storing%20Comments%20%E2%80%94%20MongoDB%20Manual_files/defaulten.js" type="text/javascript"></script><script src="Storing%20Comments%20%E2%80%94%20MongoDB%20Manual_files/search.js" type="text/javascript"></script><style type="text/css">
.gsc-control-cse {
font-family: Arial, sans-serif;
border-color: #FFFFFF;
background-color: #FFFFFF;
}
.gsc-control-cse .gsc-table-result {
font-family: Arial, sans-serif;
}
input.gsc-input, .gsc-input-box, .gsc-input-box-hover, .gsc-input-box-focus {
border-color: #D9D9D9;
}
input.gsc-search-button, input.gsc-search-button:hover, input.gsc-search-button:focus {
border-color: #5AAC41;
background-color: #5AAC41;
background-image: none;
filter: none;
}
.gsc-tabHeader.gsc-tabhInactive {
border-color: #CCCCCC;
background-color: #FFFFFF;
}
.gsc-tabHeader.gsc-tabhActive {
border-color: #CCCCCC;
border-bottom-color: #FFFFFF;
background-color: #FFFFFF;
}
.gsc-tabsArea {
border-color: #CCCCCC;
}
.gsc-webResult.gsc-result,
.gsc-results .gsc-imageResult {
border-color: #FFFFFF;
background-color: #FFFFFF;
}
.gsc-webResult.gsc-result:hover,
.gsc-imageResult:hover {
border-color: #FFFFFF;
background-color: #FFFFFF;
}
.gs-webResult.gs-result a.gs-title:link,
.gs-webResult.gs-result a.gs-title:link b,
.gs-imageResult a.gs-title:link,
.gs-imageResult a.gs-title:link b {
color: #1155CC;
}
.gs-webResult.gs-result a.gs-title:visited,
.gs-webResult.gs-result a.gs-title:visited b,
.gs-imageResult a.gs-title:visited,
.gs-imageResult a.gs-title:visited b {
color: #1155CC;
}
.gs-webResult.gs-result a.gs-title:hover,
.gs-webResult.gs-result a.gs-title:hover b,
.gs-imageResult a.gs-title:hover,
.gs-imageResult a.gs-title:hover b {
color: #1155CC;
}
.gs-webResult.gs-result a.gs-title:active,
.gs-webResult.gs-result a.gs-title:active b,
.gs-imageResult a.gs-title:active,
.gs-imageResult a.gs-title:active b {
color: #1155CC;
}
.gsc-cursor-page {
color: #1155CC;
}
a.gsc-trailing-more-results:link {
color: #1155CC;
}
.gs-webResult .gs-snippet,
.gs-imageResult .gs-snippet,
.gs-fileFormatType {
color: #333333;
}
.gs-webResult div.gs-visibleUrl,
.gs-imageResult div.gs-visibleUrl {
color: #009933;
}
.gs-webResult div.gs-visibleUrl-short {
color: #009933;
}
.gs-webResult div.gs-visibleUrl-short {
display: none;
}
.gs-webResult div.gs-visibleUrl-long {
display: block;
}
.gs-promotion div.gs-visibleUrl-short {
display: none;
}
.gs-promotion div.gs-visibleUrl-long {
display: block;
}
.gsc-cursor-box {
border-color: #FFFFFF;
}
.gsc-results .gsc-cursor-box .gsc-cursor-page {
border-color: #CCCCCC;
background-color: #FFFFFF;
color: #1155CC;
}
.gsc-results .gsc-cursor-box .gsc-cursor-current-page {
border-color: #CCCCCC;
background-color: #FFFFFF;
color: #1155CC;
}
.gsc-webResult.gsc-result.gsc-promotion {
border-color: #F6F6F6;
background-color: #F6F6F6;
}
.gsc-completion-title {
color: #1155CC;
}
.gsc-completion-snippet {
color: #333333;
}
.gs-promotion a.gs-title:link,
.gs-promotion a.gs-title:link *,
.gs-promotion .gs-snippet a:link {
color: #1155CC;
}
.gs-promotion a.gs-title:visited,
.gs-promotion a.gs-title:visited *,
.gs-promotion .gs-snippet a:visited {
color: #1155CC;
}
.gs-promotion a.gs-title:hover,
.gs-promotion a.gs-title:hover *,
.gs-promotion .gs-snippet a:hover {
color: #1155CC;
}
.gs-promotion a.gs-title:active,
.gs-promotion a.gs-title:active *,
.gs-promotion .gs-snippet a:active {
color: #1155CC;
}
.gs-promotion .gs-snippet,
.gs-promotion .gs-title .gs-promotion-title-right,
.gs-promotion .gs-title .gs-promotion-title-right * {
color: #333333;
}
.gs-promotion .gs-visibleUrl,
.gs-promotion .gs-visibleUrl-short {
color: #009933;
}
.gsc-input input.gsc-input {
background: none repeat scroll 0% 0% white !important;
}
</style></head>
  <body>
<div id="top-right">
        <div class="user-right">
                <ul id="header-menu-bar" class="ajs-menu-bar">
                <li class="normal"><a target="_blank" href="http://groups.google.com/group/mongodb-user">Forums</a></li>
                <li class="normal"><a target="_blank" href="http://blog.mongodb.org/">Blog</a></li>
                <li class="normal"><a href="http://www.mongodb.org/downloads">Download</a></li>
                <li class="normal"><a href="http://docs.mongodb.org/ecosystem/drivers/">Drivers</a></li>
                <li class="normal"><a href="http://www.10gen.com/events">Events</a></li>
                <li class="normal last"><a class="last" href="http://docs.mongodb.org/manual/meta/translation">Translations</a></li>
                </ul>
        </div>
</div>
<div id="header-db" class="spread">
        <div class="split">
                <div id="logo">
                        <div><a href="http://docs.mongodb.org/manual/"><img class="logo" src="Storing%20Comments%20%E2%80%94%20MongoDB%20Manual_files/logo-mongodb.png" alt="MongoDB Logo"></a></div>
                </div>
        </div>

<div class="search-db"><gcse:searchbox></gcse:searchbox></div>
<div id="etp">
<ul>
<li><a href="https://github.com/mongodb/docs/blob/master/source/use-cases/storing-comments.txt" target="_blank" title="Edit use-cases/storing-comments.txt on github">Edit this Page</a></li>
<li><a href="http://github.com/mongodb/docs" target="_blank" title="Fork the documentation on GitHub and contribute.">GitHub</a></li>
<li><a href="https://jira.mongodb.org/secure/CreateIssueDetails%21init.jspa?pid=10380&amp;issuetype=4&amp;priority=4&amp;summary=Comment+on%3a+%22use-cases/storing-comments%2Etxt%22" target="_blank" title="Report a problem with use-cases/storing-comments.txt on Jira">Report a problem</a></li>
</ul>
</div>
</div>  
    <div class="document">
      <div class="documentwrapper">
        <div class="bodywrapper">
          <div class="body">
            <div id="cse-results"><gcse:searchresults></gcse:searchresults></div>
            
  <div class="section" id="storing-comments">
<h1>Storing Comments<a class="headerlink" href="#storing-comments" title="Permalink to this headline">¶</a></h1>
<p>This document outlines the basic patterns for storing user-submitted
comments in a content management system (CMS.)</p>
<div class="section" id="overview">
<h2>Overview<a class="headerlink" href="#overview" title="Permalink to this headline">¶</a></h2>
<p>MongoDB provides a number of different approaches for storing data like
users-comments on content from a CMS. There is no correct
implementation, but there are a number of common approaches and known
considerations for each approach. This case study explores the
implementation details and trade offs of each option. The three basic
patterns are:</p>
<ol class="arabic">
<li><p class="first">Store each comment in its own <a class="reference internal" href="http://docs.mongodb.org/manual/reference/glossary/#term-document"><em class="xref std std-term">document</em></a>.</p>
<p>This approach provides the greatest flexibility at the expense of
some additional application level complexity.</p>
<p>These implementations make it possible to display comments in
chronological or threaded order, and place no restrictions on the
number of comments attached to a specific object.</p>
</li>
<li><p class="first">Embed all comments in the “parent” document.</p>
<p>This approach provides the greatest possible performance for
displaying comments at the expense of flexibility: the structure of
the comments in the document controls the display format.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">Because of the <a class="reference internal" href="http://docs.mongodb.org/manual/reference/limits/#limit-bson-document-size"><em>limit on document size</em></a>,
documents, including the original content and all comments,
cannot grow beyond 16 megabytes.</p>
</div>
</li>
<li><p class="first">A hybrid design, stores comments separately from the “parent,” but
aggregates comments into a small number of documents, where each
contains many comments.</p>
</li>
</ol>
<p>Also consider that comments can be <em>threaded</em>, where comments are
always replies to “parent” item or to another comment, which carries
certain architectural requirements discussed below.</p>
</div>
<div class="section" id="one-document-per-comment">
<h2>One Document per Comment<a class="headerlink" href="#one-document-per-comment" title="Permalink to this headline">¶</a></h2>
<div class="section" id="schema">
<h3>Schema<a class="headerlink" href="#schema" title="Permalink to this headline">¶</a></h3>
<p>If you store each comment in its own document, the documents in your
<tt class="docutils literal"><span class="pre">comments</span></tt> collection, would have the following structure:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">{</span>
    <span class="nx">_id</span><span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(...),</span>
    <span class="nx">discussion_id</span><span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(...),</span>
    <span class="nx">slug</span><span class="o">:</span> <span class="s1">'34db'</span><span class="p">,</span>
    <span class="nx">posted</span><span class="o">:</span> <span class="nx">ISODateTime</span><span class="p">(...),</span>
    <span class="nx">author</span><span class="o">:</span> <span class="p">{</span>
              <span class="nx">id</span><span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(...),</span>
              <span class="nx">name</span><span class="o">:</span> <span class="s1">'Rick'</span>
             <span class="p">},</span>
    <span class="nx">text</span><span class="o">:</span> <span class="s1">'This is so bogus ... '</span>
<span class="p">}</span>
</pre></div>
</div>
<p>This form is only suitable for displaying comments in chronological
order. Comments store:</p>
<ul class="simple">
<li>the <tt class="docutils literal"><span class="pre">discussion_id</span></tt> field that references the discussion parent,</li>
<li>a URL-compatible <tt class="docutils literal"><span class="pre">slug</span></tt> identifier,</li>
<li>a <tt class="docutils literal"><span class="pre">posted</span></tt> timestamp,</li>
<li>an <tt class="docutils literal"><span class="pre">author</span></tt> sub-document that contains a reference to a user’s
profile in the <tt class="docutils literal"><span class="pre">id</span></tt> field and their name in the <tt class="docutils literal"><span class="pre">name</span></tt> field,
and</li>
<li>the full <tt class="docutils literal"><span class="pre">text</span></tt> of the comment.</li>
</ul>
<p>To support threaded comments, you might use a slightly different
structure like the following:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">{</span>
    <span class="nx">_id</span><span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(...),</span>
    <span class="nx">discussion_id</span><span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(...),</span>
    <span class="nx">parent_id</span><span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(...),</span>
    <span class="nx">slug</span><span class="o">:</span> <span class="s1">'34db/8bda'</span>
    <span class="nx">full_slug</span><span class="o">:</span> <span class="s1">'2012.02.08.12.21.08:34db/2012.02.09.22.19.16:8bda'</span><span class="p">,</span>
    <span class="nx">posted</span><span class="o">:</span> <span class="nx">ISODateTime</span><span class="p">(...),</span>
    <span class="nx">author</span><span class="o">:</span> <span class="p">{</span>
              <span class="nx">id</span><span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(...),</span>
              <span class="nx">name</span><span class="o">:</span> <span class="s1">'Rick'</span>
             <span class="p">},</span>
    <span class="nx">text</span><span class="o">:</span> <span class="s1">'This is so bogus ... '</span>
<span class="p">}</span>
</pre></div>
</div>
<p>This structure:</p>
<ul class="simple">
<li>adds a <tt class="docutils literal"><span class="pre">parent_id</span></tt> field that stores the contents of the <tt class="docutils literal"><span class="pre">_id</span></tt>
field of the parent comment,</li>
<li>modifies the <tt class="docutils literal"><span class="pre">slug</span></tt> field to hold a path composed of the parent or
parent’s slug and this comment’s unique slug, and</li>
<li>adds a <tt class="docutils literal"><span class="pre">full_slug</span></tt> field that that combines the slugs and time
information to make it easier to sort documents in a threaded
discussion by date.</li>
</ul>
<div class="admonition warning">
<p class="first admonition-title">Warning</p>
<p class="last">MongoDB can only index <a class="reference internal" href="http://docs.mongodb.org/manual/reference/limits/#limit-index-size"><em>1024 bytes</em></a>. This
includes all field data, the field name, and the namespace
(i.e. database name and collection name.) This may become an issue
when you create an index of the <tt class="docutils literal"><span class="pre">full_slug</span></tt> field to support
sorting.</p>
</div>
</div>
<div class="section" id="operations">
<h3>Operations<a class="headerlink" href="#operations" title="Permalink to this headline">¶</a></h3>
<p>This section contains an overview of common operations for interacting
with comments represented using a schema where each comment is its own
<a class="reference internal" href="http://docs.mongodb.org/manual/reference/glossary/#term-document"><em class="xref std std-term">document</em></a>.</p>
<p>All examples in this document use the Python programming language and
the <a class="reference external" href="http://api.mongodb.org/python/current">PyMongo</a> <a class="reference internal" href="http://docs.mongodb.org/manual/reference/glossary/#term-driver"><em class="xref std std-term">driver</em></a> for MongoDB, but
you can implement this system using any language you choose. Issue the
following commands at the interactive Python shell to load the
required libraries:</p>
<div class="highlight-pycon"><div class="highlight"><pre><span class="gp">&gt;&gt;&gt; </span><span class="kn">import</span> <span class="nn">bson</span>
<span class="gp">&gt;&gt;&gt; </span><span class="kn">import</span> <span class="nn">pymongo</span>
</pre></div>
</div>
<div class="section" id="post-a-new-comment">
<h4>Post a New Comment<a class="headerlink" href="#post-a-new-comment" title="Permalink to this headline">¶</a></h4>
<p>To post a new comment in a chronologically ordered (i.e. without
threading) system, use the following <a class="reference external" href="http://api.mongodb.org/python/current/api/pymongo/collection.html#pymongo.collection.Collection.insert" title="(in PyMongo v2.4.2)"><tt class="xref py py-meth docutils literal"><span class="pre">insert()</span></tt></a>
operation:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">slug</span> <span class="o">=</span> <span class="n">generate_pseudorandom_slug</span><span class="p">()</span>
<span class="n">db</span><span class="o">.</span><span class="n">comments</span><span class="o">.</span><span class="n">insert</span><span class="p">({</span>
    <span class="s">'discussion_id'</span><span class="p">:</span> <span class="n">discussion_id</span><span class="p">,</span>
    <span class="s">'slug'</span><span class="p">:</span> <span class="n">slug</span><span class="p">,</span>
    <span class="s">'posted'</span><span class="p">:</span> <span class="n">datetime</span><span class="o">.</span><span class="n">utcnow</span><span class="p">(),</span>
    <span class="s">'author'</span><span class="p">:</span> <span class="n">author_info</span><span class="p">,</span>
    <span class="s">'text'</span><span class="p">:</span> <span class="n">comment_text</span> <span class="p">})</span>
</pre></div>
</div>
<p>To insert a comment for a system with threaded comments, you must
generate the <tt class="docutils literal"><span class="pre">slug</span></tt> path and <tt class="docutils literal"><span class="pre">full_slug</span></tt> at insert. See the
following operation:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">posted</span> <span class="o">=</span> <span class="n">datetime</span><span class="o">.</span><span class="n">utcnow</span><span class="p">()</span>

<span class="c"># generate the unique portions of the slug and full_slug</span>
<span class="n">slug_part</span> <span class="o">=</span> <span class="n">generate_pseudorandom_slug</span><span class="p">()</span>
<span class="n">full_slug_part</span> <span class="o">=</span> <span class="n">posted</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s">'%Y.%m.</span><span class="si">%d</span><span class="s">.%H.%M.%S'</span><span class="p">)</span> <span class="o">+</span> <span class="s">':'</span> <span class="o">+</span> <span class="n">slug_part</span>
<span class="c"># load the parent comment (if any)</span>
<span class="k">if</span> <span class="n">parent_slug</span><span class="p">:</span>
    <span class="n">parent</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">comments</span><span class="o">.</span><span class="n">find_one</span><span class="p">(</span>
        <span class="p">{</span><span class="s">'discussion_id'</span><span class="p">:</span> <span class="n">discussion_id</span><span class="p">,</span> <span class="s">'slug'</span><span class="p">:</span> <span class="n">parent_slug</span> <span class="p">})</span>
    <span class="n">slug</span> <span class="o">=</span> <span class="n">parent</span><span class="p">[</span><span class="s">'slug'</span><span class="p">]</span> <span class="o">+</span> <span class="s">'/'</span> <span class="o">+</span> <span class="n">slug_part</span>
    <span class="n">full_slug</span> <span class="o">=</span> <span class="n">parent</span><span class="p">[</span><span class="s">'full_slug'</span><span class="p">]</span> <span class="o">+</span> <span class="s">'/'</span> <span class="o">+</span> <span class="n">full_slug_part</span>
<span class="k">else</span><span class="p">:</span>
    <span class="n">slug</span> <span class="o">=</span> <span class="n">slug_part</span>
    <span class="n">full_slug</span> <span class="o">=</span> <span class="n">full_slug_part</span>

<span class="c"># actually insert the comment</span>
<span class="n">db</span><span class="o">.</span><span class="n">comments</span><span class="o">.</span><span class="n">insert</span><span class="p">({</span>
    <span class="s">'discussion_id'</span><span class="p">:</span> <span class="n">discussion_id</span><span class="p">,</span>
    <span class="s">'slug'</span><span class="p">:</span> <span class="n">slug</span><span class="p">,</span>
    <span class="s">'full_slug'</span><span class="p">:</span> <span class="n">full_slug</span><span class="p">,</span>
    <span class="s">'posted'</span><span class="p">:</span> <span class="n">posted</span><span class="p">,</span>
    <span class="s">'author'</span><span class="p">:</span> <span class="n">author_info</span><span class="p">,</span>
    <span class="s">'text'</span><span class="p">:</span> <span class="n">comment_text</span> <span class="p">})</span>
</pre></div>
</div>
</div>
<div class="section" id="view-paginated-comments">
<h4>View Paginated Comments<a class="headerlink" href="#view-paginated-comments" title="Permalink to this headline">¶</a></h4>
<p>To view comments that are not threaded, select all comments
participating in a discussion and sort by the <tt class="docutils literal"><span class="pre">posted</span></tt> field. For
example:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">cursor</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">comments</span><span class="o">.</span><span class="n">find</span><span class="p">({</span><span class="s">'discussion_id'</span><span class="p">:</span> <span class="n">discussion_id</span><span class="p">})</span>
<span class="n">cursor</span> <span class="o">=</span> <span class="n">cursor</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="s">'posted'</span><span class="p">)</span>
<span class="n">cursor</span> <span class="o">=</span> <span class="n">cursor</span><span class="o">.</span><span class="n">skip</span><span class="p">(</span><span class="n">page_num</span> <span class="o">*</span> <span class="n">page_size</span><span class="p">)</span>
<span class="n">cursor</span> <span class="o">=</span> <span class="n">cursor</span><span class="o">.</span><span class="n">limit</span><span class="p">(</span><span class="n">page_size</span><span class="p">)</span>
</pre></div>
</div>
<p>Because the <tt class="docutils literal"><span class="pre">full_slug</span></tt> field contains both hierarchical information
(via the path) and chronological information, you can use a simple
sort on the <tt class="docutils literal"><span class="pre">full_slug</span></tt> field to retrieve a threaded view:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">cursor</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">comments</span><span class="o">.</span><span class="n">find</span><span class="p">({</span><span class="s">'discussion_id'</span><span class="p">:</span> <span class="n">discussion_id</span><span class="p">})</span>
<span class="n">cursor</span> <span class="o">=</span> <span class="n">cursor</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="s">'full_slug'</span><span class="p">)</span>
<span class="n">cursor</span> <span class="o">=</span> <span class="n">cursor</span><span class="o">.</span><span class="n">skip</span><span class="p">(</span><span class="n">page_num</span> <span class="o">*</span> <span class="n">page_size</span><span class="p">)</span>
<span class="n">cursor</span> <span class="o">=</span> <span class="n">cursor</span><span class="o">.</span><span class="n">limit</span><span class="p">(</span><span class="n">page_size</span><span class="p">)</span>
</pre></div>
</div>
<div class="admonition-see-also admonition seealso">
<p class="first admonition-title">See also</p>
<p class="last"><a class="reference internal" href="http://docs.mongodb.org/manual/reference/method/cursor.limit/#cursor.limit" title="cursor.limit"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">cursor.limit</span></tt></a>, <a class="reference internal" href="http://docs.mongodb.org/manual/reference/method/cursor.skip/#cursor.skip" title="cursor.skip"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">cursor.skip</span></tt></a>, and
<a class="reference internal" href="http://docs.mongodb.org/manual/reference/method/cursor.sort/#cursor.sort" title="cursor.sort"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">cursor.sort</span></tt></a></p>
</div>
</div>
<div class="section" id="indexing">
<h4>Indexing<a class="headerlink" href="#indexing" title="Permalink to this headline">¶</a></h4>
<p>To support the above queries  efficiently, maintain
two compound indexes, on:</p>
<ol class="arabic simple">
<li><tt class="docutils literal"><span class="pre">(``discussion_id</span></tt>, <tt class="docutils literal"><span class="pre">posted</span></tt>)`` and</li>
<li><tt class="docutils literal"><span class="pre">(``discussion_id</span></tt>, <tt class="docutils literal"><span class="pre">full_slug</span></tt>)``</li>
</ol>
<p>Issue the following operation at the interactive Python shell.</p>
<div class="highlight-pycon"><div class="highlight"><pre><span class="gp">&gt;&gt;&gt; </span><span class="n">db</span><span class="o">.</span><span class="n">comments</span><span class="o">.</span><span class="n">ensure_index</span><span class="p">([</span>
<span class="gp">... </span>   <span class="p">(</span><span class="s">'discussion_id'</span><span class="p">,</span> <span class="mi">1</span><span class="p">),</span> <span class="p">(</span><span class="s">'posted'</span><span class="p">,</span> <span class="mi">1</span><span class="p">)])</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">db</span><span class="o">.</span><span class="n">comments</span><span class="o">.</span><span class="n">ensure_index</span><span class="p">([</span>
<span class="gp">... </span>   <span class="p">(</span><span class="s">'discussion_id'</span><span class="p">,</span> <span class="mi">1</span><span class="p">),</span> <span class="p">(</span><span class="s">'full_slug'</span><span class="p">,</span> <span class="mi">1</span><span class="p">)])</span>
</pre></div>
</div>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">Ensure that you always sort by the final element in a compound
index to maximize the performance of these queries.</p>
</div>
</div>
</div>
<div class="section" id="retrieve-comments-via-direct-links">
<h3>Retrieve Comments via Direct Links<a class="headerlink" href="#retrieve-comments-via-direct-links" title="Permalink to this headline">¶</a></h3>
<div class="section" id="queries">
<h4>Queries<a class="headerlink" href="#queries" title="Permalink to this headline">¶</a></h4>
<p>To directly retrieve a comment, without needing to page through all
comments, you can select by the <tt class="docutils literal"><span class="pre">slug</span></tt> field:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">comment</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">comments</span><span class="o">.</span><span class="n">find_one</span><span class="p">({</span>
    <span class="s">'discussion_id'</span><span class="p">:</span> <span class="n">discussion_id</span><span class="p">,</span>
    <span class="s">'slug'</span><span class="p">:</span> <span class="n">comment_slug</span><span class="p">})</span>
</pre></div>
</div>
<p>You can retrieve a “sub-discussion,” or a comment and all of its
descendants recursively, by performing a regular expression prefix
query on the <tt class="docutils literal"><span class="pre">full_slug</span></tt> field:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="kn">import</span> <span class="nn">re</span>

<span class="n">subdiscussion</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">comments</span><span class="o">.</span><span class="n">find_one</span><span class="p">({</span>
    <span class="s">'discussion_id'</span><span class="p">:</span> <span class="n">discussion_id</span><span class="p">,</span>
    <span class="s">'full_slug'</span><span class="p">:</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="s">'^'</span> <span class="o">+</span> <span class="n">re</span><span class="o">.</span><span class="n">escape</span><span class="p">(</span><span class="n">parent_slug</span><span class="p">))</span> <span class="p">})</span>
<span class="n">subdiscussion</span> <span class="o">=</span> <span class="n">subdiscussion</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="s">'full_slug'</span><span class="p">)</span>
</pre></div>
</div>
</div>
<div class="section" id="id1">
<h4>Indexing<a class="headerlink" href="#id1" title="Permalink to this headline">¶</a></h4>
<p>Since you have already created indexes on <tt class="docutils literal"><span class="pre">{</span> <span class="pre">discussion_id:</span> <span class="pre">1,</span>
<span class="pre">full_slug:</span> <span class="pre">}</span></tt> to support retrieving sub-discussions, you can add
support for the above queries by adding an index on <tt class="docutils literal"><span class="pre">{</span>
<span class="pre">discussion_id:</span> <span class="pre">1</span> <span class="pre">,</span> <span class="pre">slug:</span> <span class="pre">1</span> <span class="pre">}</span></tt>. Use the following operation in the
Python shell:</p>
<div class="highlight-pycon"><div class="highlight"><pre><span class="gp">&gt;&gt;&gt; </span><span class="n">db</span><span class="o">.</span><span class="n">comments</span><span class="o">.</span><span class="n">ensure_index</span><span class="p">([</span>
<span class="gp">... </span>   <span class="p">(</span><span class="s">'discussion_id'</span><span class="p">,</span> <span class="mi">1</span><span class="p">),</span> <span class="p">(</span><span class="s">'slug'</span><span class="p">,</span> <span class="mi">1</span><span class="p">)])</span>
</pre></div>
</div>
</div>
</div>
</div>
<div class="section" id="embedding-all-comments">
<h2>Embedding All Comments<a class="headerlink" href="#embedding-all-comments" title="Permalink to this headline">¶</a></h2>
<p>This design embeds the entire discussion of a comment thread inside of
the topic <a class="reference internal" href="http://docs.mongodb.org/manual/reference/glossary/#term-document"><em class="xref std std-term">document</em></a>. In this example, the “topic,” document
holds the total content for whatever content you’re managing.</p>
<div class="section" id="id2">
<h3>Schema<a class="headerlink" href="#id2" title="Permalink to this headline">¶</a></h3>
<p>Consider the following prototype <tt class="docutils literal"><span class="pre">topic</span></tt> document:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">{</span>
    <span class="nx">_id</span><span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(...),</span>
    <span class="p">...</span> <span class="nx">lots</span> <span class="nx">of</span> <span class="nx">topic</span> <span class="nx">data</span> <span class="p">...</span>
    <span class="nx">comments</span><span class="o">:</span> <span class="p">[</span>
        <span class="p">{</span> <span class="nx">posted</span><span class="o">:</span> <span class="nx">ISODateTime</span><span class="p">(...),</span>
          <span class="nx">author</span><span class="o">:</span> <span class="p">{</span> <span class="nx">id</span><span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(...),</span> <span class="nx">name</span><span class="o">:</span> <span class="s1">'Rick'</span> <span class="p">},</span>
          <span class="nx">text</span><span class="o">:</span> <span class="s1">'This is so bogus ... '</span> <span class="p">},</span>
       <span class="p">...</span> <span class="p">]</span>
<span class="p">}</span>
</pre></div>
</div>
<p>This structure is only suitable for a chronological display of all
comments because it embeds comments in chronological order. Each
document in the array in the <tt class="docutils literal"><span class="pre">comments</span></tt> contains the comment’s date,
author, and text.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">Since you’re storing the comments in sorted order, there is no need
to maintain per-comment slugs.</p>
</div>
<p>To support threading using this design, you would need to embed
comments within comments, using a structure that resembles the
following:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">{</span>
    <span class="nx">_id</span><span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(...),</span>
    <span class="p">...</span> <span class="nx">lots</span> <span class="nx">of</span> <span class="nx">topic</span> <span class="nx">data</span> <span class="p">...</span>
    <span class="nx">replies</span><span class="o">:</span> <span class="p">[</span>
        <span class="p">{</span> <span class="nx">posted</span><span class="o">:</span> <span class="nx">ISODateTime</span><span class="p">(...),</span>
          <span class="nx">author</span><span class="o">:</span> <span class="p">{</span> <span class="nx">id</span><span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(...),</span> <span class="nx">name</span><span class="o">:</span> <span class="s1">'Rick'</span> <span class="p">},</span>
          <span class="nx">text</span><span class="o">:</span> <span class="s1">'This is so bogus ... '</span><span class="p">,</span>
          <span class="nx">replies</span><span class="o">:</span> <span class="p">[</span>
              <span class="p">{</span> <span class="nx">author</span><span class="o">:</span> <span class="p">{</span> <span class="p">...</span> <span class="p">},</span> <span class="p">...</span> <span class="p">},</span>
       <span class="p">...</span> <span class="p">]</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Here, the <tt class="docutils literal"><span class="pre">replies</span></tt> field in each comment holds the
sub-comments, which can intern hold sub-comments.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p>In the embedded document design, you give up some flexibility
regarding display format, because it is difficult to display
comments <em>except</em> as you store them in MongoDB.</p>
<p class="last">If, in the future, you want to switch from chronological to
threaded or from threaded to chronological, this design would make
that migration quite expensive.</p>
</div>
<div class="admonition warning">
<p class="first admonition-title">Warning</p>
<p>Remember that <a class="reference internal" href="http://docs.mongodb.org/manual/reference/glossary/#term-bson"><em class="xref std std-term">BSON</em></a> documents have a <a class="reference internal" href="http://docs.mongodb.org/manual/reference/limits/#limit-bson-document-size"><em>16 megabyte size
limit</em></a>. If popular discussions grow
larger than 16 megabytes, additional document growth will fail.</p>
<p class="last">Additionally, when MongoDB documents grow significantly after
creation you will experience greater storage fragmentation and
degraded update performance while MongoDB migrates documents
internally.</p>
</div>
</div>
<div class="section" id="id3">
<h3>Operations<a class="headerlink" href="#id3" title="Permalink to this headline">¶</a></h3>
<p>This section contains an overview of common operations for interacting
with comments represented using a schema that embeds all comments the
<a class="reference internal" href="http://docs.mongodb.org/manual/reference/glossary/#term-document"><em class="xref std std-term">document</em></a> of the “parent” or topic content.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">For all operations below, there is no need for any new indexes
since all the operations are function within documents. Because you
would retrieve these documents by the <tt class="docutils literal"><span class="pre">_id</span></tt> field, you can rely
on the index that MongoDB creates automatically.</p>
</div>
<div class="section" id="id4">
<h4>Post a new comment<a class="headerlink" href="#id4" title="Permalink to this headline">¶</a></h4>
<p>To post a new comment in a chronologically ordered (i.e unthreaded)
system, you need the following <a class="reference external" href="http://api.mongodb.org/python/current/api/pymongo/collection.html#pymongo.collection.Collection.update" title="(in PyMongo v2.4.2)"><tt class="xref py py-meth docutils literal"><span class="pre">update()</span></tt></a>:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">db</span><span class="o">.</span><span class="n">discussion</span><span class="o">.</span><span class="n">update</span><span class="p">(</span>
    <span class="p">{</span> <span class="s">'discussion_id'</span><span class="p">:</span> <span class="n">discussion_id</span> <span class="p">},</span>
    <span class="p">{</span> <span class="s">'$push'</span><span class="p">:</span> <span class="p">{</span> <span class="s">'comments'</span><span class="p">:</span> <span class="p">{</span>
        <span class="s">'posted'</span><span class="p">:</span> <span class="n">datetime</span><span class="o">.</span><span class="n">utcnow</span><span class="p">(),</span>
        <span class="s">'author'</span><span class="p">:</span> <span class="n">author_info</span><span class="p">,</span>
        <span class="s">'text'</span><span class="p">:</span> <span class="n">comment_text</span> <span class="p">}</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>The <a class="reference internal" href="http://docs.mongodb.org/manual/reference/operator/push/#_S_push" title="$push"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$push</span></tt></a> operator inserts comments into the <tt class="docutils literal"><span class="pre">comments</span></tt>
array in correct chronological order. For threaded discussions, the
<a class="reference external" href="http://api.mongodb.org/python/current/api/pymongo/collection.html#pymongo.collection.Collection.update" title="(in PyMongo v2.4.2)"><tt class="xref py py-meth docutils literal"><span class="pre">update()</span></tt></a>
operation is more complex. To reply to a comment, the following code
assumes that it can retrieve the ‘path’ as a list of positions, for
the parent comment:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="k">if</span> <span class="n">path</span> <span class="o">!=</span> <span class="p">[]:</span>
    <span class="n">str_path</span> <span class="o">=</span> <span class="s">'.'</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s">'replies.</span><span class="si">%d</span><span class="s">'</span> <span class="o">%</span> <span class="n">part</span> <span class="k">for</span> <span class="n">part</span> <span class="ow">in</span> <span class="n">path</span><span class="p">)</span>
    <span class="n">str_path</span> <span class="o">+=</span> <span class="s">'.replies'</span>
<span class="k">else</span><span class="p">:</span>
    <span class="n">str_path</span> <span class="o">=</span> <span class="s">'replies'</span>
<span class="n">db</span><span class="o">.</span><span class="n">discussion</span><span class="o">.</span><span class="n">update</span><span class="p">(</span>
    <span class="p">{</span> <span class="s">'discussion_id'</span><span class="p">:</span> <span class="n">discussion_id</span> <span class="p">},</span>
    <span class="p">{</span> <span class="s">'$push'</span><span class="p">:</span> <span class="p">{</span>
        <span class="n">str_path</span><span class="p">:</span> <span class="p">{</span>
            <span class="s">'posted'</span><span class="p">:</span> <span class="n">datetime</span><span class="o">.</span><span class="n">utcnow</span><span class="p">(),</span>
            <span class="s">'author'</span><span class="p">:</span> <span class="n">author_info</span><span class="p">,</span>
            <span class="s">'text'</span><span class="p">:</span> <span class="n">comment_text</span> <span class="p">}</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This constructs a field name of the form <tt class="docutils literal"><span class="pre">replies.0.replies.2...</span></tt> as
<tt class="docutils literal"><span class="pre">str_path</span></tt> and then uses this value with the <a class="reference internal" href="http://docs.mongodb.org/manual/reference/operator/push/#_S_push" title="$push"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$push</span></tt></a>
operator to insert the new comment into the parent comment’s
<tt class="docutils literal"><span class="pre">replies</span></tt> array.</p>
</div>
<div class="section" id="id5">
<h4>View Paginated Comments<a class="headerlink" href="#id5" title="Permalink to this headline">¶</a></h4>
<p>To view the comments in a non-threaded design, you must use
the <tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$slice</span></tt> operator:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">discussion</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">discussion</span><span class="o">.</span><span class="n">find_one</span><span class="p">(</span>
    <span class="p">{</span><span class="s">'discussion_id'</span><span class="p">:</span> <span class="n">discussion_id</span><span class="p">},</span>
    <span class="p">{</span> <span class="o">...</span> <span class="n">some</span> <span class="n">fields</span> <span class="n">relevant</span> <span class="n">to</span> <span class="n">your</span> <span class="n">page</span> <span class="kn">from</span> <span class="nn">the</span> <span class="nn">root</span> <span class="nn">discussion</span> <span class="nn">...</span><span class="p">,</span>
      <span class="s">'comments'</span><span class="p">:</span> <span class="p">{</span> <span class="s">'$slice'</span><span class="p">:</span> <span class="p">[</span> <span class="n">page_num</span> <span class="o">*</span> <span class="n">page_size</span><span class="p">,</span> <span class="n">page_size</span> <span class="p">]</span> <span class="p">}</span>
    <span class="p">})</span>
</pre></div>
</div>
<p>To return paginated comments for the threaded design, you must
retrieve the whole document and paginate the comments within the
application:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">discussion</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">discussion</span><span class="o">.</span><span class="n">find_one</span><span class="p">({</span><span class="s">'discussion_id'</span><span class="p">:</span> <span class="n">discussion_id</span><span class="p">})</span>

<span class="k">def</span> <span class="nf">iter_comments</span><span class="p">(</span><span class="n">obj</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">reply</span> <span class="ow">in</span> <span class="n">obj</span><span class="p">[</span><span class="s">'replies'</span><span class="p">]:</span>
        <span class="k">yield</span> <span class="n">reply</span>
        <span class="k">for</span> <span class="n">subreply</span> <span class="ow">in</span> <span class="n">iter_comments</span><span class="p">(</span><span class="n">reply</span><span class="p">):</span>
            <span class="k">yield</span> <span class="n">subreply</span>

<span class="n">paginated_comments</span> <span class="o">=</span> <span class="n">itertools</span><span class="o">.</span><span class="n">slice</span><span class="p">(</span>
    <span class="n">iter_comments</span><span class="p">(</span><span class="n">discussion</span><span class="p">),</span>
    <span class="n">page_size</span> <span class="o">*</span> <span class="n">page_num</span><span class="p">,</span>
    <span class="n">page_size</span> <span class="o">*</span> <span class="p">(</span><span class="n">page_num</span> <span class="o">+</span> <span class="mi">1</span><span class="p">))</span>
</pre></div>
</div>
</div>
<div class="section" id="retrieve-a-comment-via-direct-links">
<h4>Retrieve a Comment via Direct Links<a class="headerlink" href="#retrieve-a-comment-via-direct-links" title="Permalink to this headline">¶</a></h4>
<p>Instead of retrieving comments via slugs as above, the following
example retrieves comments using their position in the comment list or
tree.</p>
<p>For chronological (i.e. non-threaded) comments, just use the
<tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$slice</span></tt> operator to extract a comment, as follows:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">discussion</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">discussion</span><span class="o">.</span><span class="n">find_one</span><span class="p">(</span>
    <span class="p">{</span><span class="s">'discussion_id'</span><span class="p">:</span> <span class="n">discussion_id</span><span class="p">},</span>
    <span class="p">{</span><span class="s">'comments'</span><span class="p">:</span> <span class="p">{</span> <span class="s">'$slice'</span><span class="p">:</span> <span class="p">[</span> <span class="n">position</span><span class="p">,</span> <span class="n">position</span> <span class="p">]</span> <span class="p">}</span> <span class="p">})</span>
<span class="n">comment</span> <span class="o">=</span> <span class="n">discussion</span><span class="p">[</span><span class="s">'comments'</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span>
</pre></div>
</div>
<p>For threaded comments, you must find the correct path through the tree
in your application, as follows:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">discussion</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">discussion</span><span class="o">.</span><span class="n">find_one</span><span class="p">({</span><span class="s">'discussion_id'</span><span class="p">:</span> <span class="n">discussion_id</span><span class="p">})</span>
<span class="n">current</span> <span class="o">=</span> <span class="n">discussion</span>
<span class="k">for</span> </pre></div></div></div></div></div></div></div></div></div></div></body></html>